{"FileModelVersion":{"Major":1,"Minor":0},"Name":"Land Marauder","Version":127,"SavedTotalBlockCount":3615,"SavedMaterialCost":33167.42,"ContainedMaterialCost":8.40000248,"ItemDictionary":{"227":"1576f21e-9ca2-4f29-8b14-53ce98205a5b","1592":"d077c2a4-4578-4965-9318-c14bb7ac1bd6","1590":"05475442-0e52-4e0b-9fbb-2715f0e54f97","1306":"b9d21957-633f-4926-9562-4cfab38badee","1328":"ee18a848-1319-4ff9-b5e5-3f3710635dbf","1589":"39553630-8281-40e4-96fb-b01c1f3537e6","366":"8331c71c-5725-472d-ad2e-65e4110982b7","291":"52e52d0c-02d7-4965-a46e-93462e083659","1309":"2ddec223-13c2-4bf9-ba05-66338c51bd45","1591":"2ee817c1-f2a3-407a-847d-b97ffb844e45","1198":"f5d2db25-114e-473a-8313-96831ccd011e","327":"d5016f16-6431-4e8f-b0cc-5f0f400b151a","1605":"bdafa446-f615-49cb-94f3-d7652dde6cec","1324":"bcaf33a4-98c3-41d7-b416-438670e97d53","1297":"a7f5d8de-4882-4111-9d01-436493e5b2d8","1606":"b88679fb-0325-4c85-942f-ad9c6ed6545b","226":"9a0d25cc-f5c2-4780-b674-38fe17e73f8e","669":"ab699540-efc8-4592-bc97-204f6a874b3a","1588":"de36c624-8c78-4b52-8d86-431cec16a306","1296":"46f54639-5f91-4731-93eb-e5c0a7460538","219":"637d3a6a-2f79-477a-b97f-34dca41b5714","329":"515ee20d-20d8-4195-bea5-213e6f1fd929","1295":"2a22f176-01c2-42f2-a7d2-2c7054504aa9","328":"01a87958-93cf-4efa-857f-10913b0573d9","1600":"ee5463c9-b9f8-4438-bb79-7f2364f69b61","467":"ef545d00-c22d-4eed-bd76-74d6432e2974","1626":"f878fa09-cb47-4e1c-8f1e-df2544a6882a","285":"9413049d-a4f7-4c1c-8b8a-d2f1f4c18e53","341":"a160804b-15cc-46e2-8ffb-401c2aa01de6","346":"e0f9e669-4748-4cde-be95-58e47e094253","1612":"90ca403c-ddb5-4a55-ac6f-2ca2c970d6ad","1301":"8477bbec-974c-45bf-a1ce-49a48d5b5307","1615":"6cc4ec54-404c-4989-9f85-9b59824faf96","672":"d51549fd-2e38-4271-b85a-afded45400df","57":"9a3f63f4-48b6-4fe0-9f59-9fac3d073750","1635":"92159a6b-a1b6-4f8b-9c08-503f2cbbd572","332":"91d167b1-652f-4ac8-adc4-973b548ccd5d","1634":"6448ddc8-a3df-465f-b819-52f1cf347983","1631":"dee106ea-3e91-4b03-92ef-33038c5681a0","1601":"2db5d925-700e-4375-abcd-f79bb17a1855","1300":"5548037e-8428-43f8-bcb6-d730dbcd0a79","336":"33b65ccc-58a0-487d-8b68-a997a71b0bfe","1329":"369eefd9-0c39-412e-a294-d0bb2251c509","370":"2078227e-d38c-4f58-abd0-6f4878806a9f","673":"9a0ae372-beb4-4009-b14e-36ed0715af73","1325":"40659614-1b34-497a-b745-78497e4b2025","1611":"17575457-18fa-43e0-a8cb-1331efc1c77e","1630":"1ae7e9fe-c0c4-4bb4-a0d6-28e21789a66c","286":"79015536-c137-4c87-a337-99dcf3deff81","326":"043e9b00-4a2f-41b8-bf2f-4aaa4442f138","486":"e6bb2b09-daee-432d-9aff-45fc63d24fca","461":"5292dcab-a674-467a-a21a-702d2c2a152b","460":"3ed4d2a4-62ce-4807-b516-6da685804e1e","440":"f29b1372-f4f3-4305-aa85-5fe214361fb7","442":"9d2ff3d6-abc2-4378-b47c-cad42d4af1bc","449":"0d1d97b5-3c99-45bf-8a5d-e7a624b3ddb6","331":"4c24445d-a29b-446e-b03f-29e570e9d47d","347":"6209370e-abeb-4ec1-b523-dc21ea33fe0c","1608":"3296c67d-6ace-44dd-8e86-335b9a90ad80","213":"c0afc8a9-5c49-4f15-8834-6e39ff144da3","72":"64109192-fd8e-422b-a9e8-74295d3d74ea","68":"19945f75-8353-45e1-938f-a548fa05e05e","618":"58305289-16ea-43cf-9144-2f23b383da81","1622":"9c0d97cf-0c99-4565-a931-b1c5bdf8fc1b","1197":"19ee2ba3-9443-4a44-97fd-bad9b1443895","63":"4bd38234-b485-4a94-bc2d-d3fc80d89955","69":"2ae437c8-afe6-4d6d-9562-0423227878b2","62":"1b672c70-b108-4ec9-b6f6-9f817adf7250","56":"ec49b6a2-244f-4cfa-b49e-8dd19213b280","1304":"de50f4f6-3d7e-4d6b-ae34-e6a34b24b104","626":"c0e407e9-fc15-43fa-9a61-4c79a3acb6a9","444":"57cd27b4-7876-41a7-8030-d5099d86bc0a","1610":"c545a97c-6ac6-4181-a704-28031244aeb1","488":"a56e0dcf-94e4-48a0-b8b9-5e33e0ab69cf","34":"936f57b0-0376-411e-a9c2-776681111efc","437":"edd65760-896f-4f6a-ba8c-eb2b072635f4","441":"26a604f0-071c-49ca-8a0e-e1d9c959b1c5","1305":"442f3ea3-c7cd-4759-84ee-a0d2fac5a711","1302":"a09be1c6-93fd-4b54-b9ca-62e60efbc818","487":"4b334c3f-aafd-440c-9c1f-02a98fd18ab5","54":"a5872d78-28e7-48a3-b452-ceb29de035cc","472":"42033da8-485e-43be-99db-ffe2492767b4","66":"54836777-b634-4a21-ab1e-2b0e426b640f","483":"2c557c38-4136-436a-bae2-c5cd1102690c","249":"31277649-04ec-45db-adfc-4a7d0a73686a","458":"930ab796-f1c7-47f0-bf04-0ef6ae44006b","18":"2e715d3f-349f-41e1-bd89-7f685939d5aa","19":"5b609887-c1dd-407b-b3b6-b1eb35d1e818","22":"7cd6a310-cf17-4f6d-a818-8f29d029778f","210":"6c37df0b-7eaf-48d4-85d8-2453014d8edf","1299":"e5d065f6-907b-450d-b998-213cdc54eec1","21":"6a7c1ad1-21e5-4b2e-bf04-cc08d639313c","1298":"0d554a9d-7d06-48b3-8aea-ffaeaa30380a","641":"6c2979f0-365a-4e9c-88ee-7b9d931409cb","638":"9ea523b6-af69-4809-b5e4-88351099b2dc","53":"a97e03b0-e8da-49e2-9913-ad8c1826d869","24":"d3924bae-be5a-43a0-be19-64fc7c8d6059","248":"e63040c9-0027-4fd3-be30-67fe3e950140","236":"cdca5dec-eeee-4849-9b2e-73b23e216465","367":"dd9dd993-3f46-47ca-bfc0-80f37e183e9b","1620":"57af2af7-29ce-4c97-b107-b59edffb6ce5","1314":"fa519e04-e82f-47db-91b8-f78ba4a5ba35","235":"788700be-1e74-46d7-9e34-1a5ec2747548","829":"60bc1939-6207-4b3e-9f31-444ed626c775","194":"f3f7620a-f281-4a3a-a75e-0106ef9c4eb8","193":"e3cc9c71-2cd1-46b8-8198-e4f578591dd9"},"Blueprint":{"ContainedMaterialCost":8.40000248,"CSI":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,1098.12561,0.0187592376,0.0,0.0,0.0,0.0,9777.038,26.452692,1.0,1.0,0.0,1.0,30.17891,148.097488,-1.0,0.0,10000.0,1.0,1.0,0.0,0.0,0.0,5.0,1185.442,100.0,0.1,0.1,1.0,1.0,3.0,3000.0,19.720192,23977.2285,0.0,-1.0,1.0,0.0,100.0,0.0,0.0,0.0,0.0,0.0,100.0,123.599991,1.0,6251.58,227.2779,0.0,0.0,0.0,500.0,0.0,12.0,0.0,0.0,0.0,40.1735458,0.0,6.5625,0.0,0.17,0.2568986,0.0,0.0,0.0,0.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0],"COL":["0,0,0,0","0.972549,0,1,0.99","0,1,0,0.63","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0.972549,1,0,0.99","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0.972549,1,1,0.55","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","0,0,0,0","1,0,0,0.99","0,1,0,0.99","0,0,0,0","0.1,0.1,0.1,0.9","0,0,0,0","0,0,0,0","0,0,0,0","0.282353,0.33,0.13,1"],"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","0,2,-5","0,3,-5","0,10,-4","0,6,-7","0,3,-6","0,5,-6","0,7,-6","0,9,-4","0,13,-7","0,4,-6","0,13,-6","0,0,-5","0,12,-4","0,11,-4","0,4,-5","0,11,-5","0,10,-5","0,9,-5","0,8,-5","0,6,-5","0,5,-5","0,1,-6","0,0,-6","0,4,-7","0,11,-7","-6,5,0","0,9,-7","-6,0,0","0,8,-7","-5,5,0","0,7,-7","0,1,-7","0,2,-7","5,10,0","-7,3,0","-7,5,0","4,14,0","0,12,-7","-7,6,0","0,10,-7","-4,11,0","0,12,-6","0,2,-6","0,3,-7","0,6,-6","0,3,-4","0,8,-6","0,14,-6","0,14,-4","6,2,0","6,3,0","7,12,0","4,0,0","4,3,0","0,0,-4","4,5,0","7,11,0","7,9,0","6,1,0","5,8,0","6,8,0","7,7,0","7,13,0","0,10,-6","0,9,-6","4,12,0","6,0,0","6,14,0","6,12,0","6,11,0","6,10,0","6,9,0","5,3,0","0,12,-5","0,5,-4","4,8,0","0,6,-4","4,10,0","0,8,-4","0,2,-4","4,11,0","5,2,0","6,13,0","0,14,-5","0,4,-4","7,8,0","5,0,0","4,6,0","4,2,0","4,9,0","4,4,0","0,11,-6","7,10,0","-5,6,0","5,4,0","5,5,0","5,6,0","-6,6,0","0,1,7","5,11,0","-5,0,0","0,3,6","5,14,0","5,12,0","0,0,5","0,0,4","0,0,6","0,1,6","0,3,5","0,2,6","0,4,5","0,13,7","5,9,0","0,11,4","0,10,7","0,8,4","0,9,6","0,2,5","0,3,7","0,2,4","0,5,7","0,11,6","0,2,7","0,8,6","0,4,7","0,6,6","0,7,1","0,10,4","0,3,4","0,5,4","0,6,7","0,5,-7","6,4,0","0,14,5","0,9,4","0,11,7","0,6,4","0,9,7","0,14,6","0,7,6","0,5,5","0,5,6","0,4,6","0,4,4","0,12,6","0,13,6","0,7,7","0,10,5","-7,8,0","-6,8,0","0,14,4","-6,14,0","-4,4,0","-7,2,0","-7,1,0","-4,2,0","-7,7,0","0,12,7","-4,3,0","-6,13,0","-4,6,0","0,12,5","-4,0,0","-6,4,0","-7,11,0","-6,1,0","-5,11,0","-6,12,0","-7,12,0","-7,4,0","7,2,0","-5,4,0","-6,3,0","0,9,5","-4,5,0","-5,3,0","0,6,5","-4,14,0","-5,2,0","-6,2,0","0,11,5","0,8,5","0,10,6","-6,11,0","6,6,0","7,3,0","-4,10,0","-5,14,0","7,4,0","-7,13,0","6,5,0","7,5,0","6,7,0","-4,12,0","-5,12,0","7,6,0","-7,9,0","-6,9,0","-5,9,0","7,1,0","-1,13,0","1,13,0","0,14,-1","-1,14,0","0,14,1","-1,14,1","-1,14,-1","1,14,-1","1,14,1","1,14,0","-1,12,1","-1,12,0","-1,12,-1","1,12,1","1,12,0","-5,7,1","1,7,-1","1,12,-1","0,12,-1","0,12,1","-1,7,-1","-1,13,1","0,1,5","1,13,-1","1,13,1","5,13,-1","-1,13,-1","5,7,1","5,7,-1","-1,7,1","1,7,1","0,1,-5","-1,13,-5","1,13,5","-1,7,5","1,7,-5","5,13,1","1,7,5","1,13,-5","-1,7,-5","-5,7,-1","-5,13,1","-5,13,-1","-1,13,5","-1,8,-1","-5,1,1","5,1,1","-5,1,-1","0,2,1","-1,1,5","1,1,5","1,1,-5","-1,1,-5","5,1,-1","0,0,1","1,0,0","0,0,-1","-1,0,0","-1,0,1","1,0,1","-1,0,-1","1,0,-1","1,6,1","-1,7,0","1,8,0","-1,8,0","1,2,0","1,6,-1","1,7,0","0,8,-1","0,2,-1","-1,2,0","-1,2,1","1,2,1","-1,2,-1","1,2,-1","1,8,-1","1,8,1","-1,8,1","0,8,1","-1,6,1","-1,6,0","4,7,2","-5,1,0","-3,13,4","-3,1,-3","2,7,4","4,7,-2","2,1,-4","-1,6,-1","0,6,-1","1,6,0","0,6,1","-4,7,3","4,1,2","2,7,-4","3,1,4","4,1,-3","-5,8,0","-2,7,4","-4,8,0","3,7,-3","-4,9,0","-3,1,-4","-5,10,0","3,1,-3","-4,13,-3","-4,13,3","-3,13,-3","-4,13,2","-4,7,2","4,7,-3","4,1,-2","3,13,-4","3,7,-4","4,13,-3","3,1,-4","-4,1,-3","3,1,3","3,13,3","-3,1,4","-6,7,0","3,7,3","3,13,-3","-6,10,0","-2,1,4","-3,1,3","3,13,4","-7,10,0","-4,1,2","-2,1,-4","-3,7,3","4,13,-2","-3,13,3","-4,1,3","-4,1,-2","4,1,3","3,7,4","2,1,4","-4,13,-2","4,7,3","4,13,3","-3,7,4","1,1,1","5,7,0","1,1,-1","0,7,-5","0,12,0","0,13,5","0,1,-1","-5,13,0","-1,1,1","-2,13,4","-1,1,-1","-3,13,-4","-2,7,-4","2,13,-4","-2,13,-4","-3,7,-3","-3,7,-4","-4,7,-3","5,13,0","-4,7,-2","0,12,4","0,1,-2","-2,1,0","0,1,2","0,2,0","4,13,2","0,7,5","2,13,4","0,13,-5","5,1,0","2,1,0","-2,13,0","0,13,2","0,5,0","0,9,0","0,1,1","-5,7,0","-2,7,0","0,7,-2","2,7,0","0,7,2","0,13,-2","2,13,0","-1,1,0","1,1,0","0,13,1","0,13,-1","0,6,0","0,7,-1","0,8,7"],"BLR":[0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,19,22,19,22,19,22,22,22,16,19,19,16,22,19,22,19,22,22,22,22,22,22,22,22,16,16,16,16,16,22,16,16,16,16,16,16,16,16,22,22,16,16,16,16,16,16,16,16,22,22,16,22,16,22,22,16,16,16,22,22,16,16,16,16,16,16,22,16,19,16,16,16,19,21,16,19,21,16,16,21,21,21,21,21,21,21,21,16,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,22,16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,19,19,21,19,19,19,19,19,19,21,19,19,19,21,19,19,19,19,19,19,19,19,16,19,19,21,19,19,21,19,19,19,21,21,21,19,16,16,19,19,16,19,16,16,16,19,19,16,19,19,19,16,0,0,10,11,8,8,11,10,9,9,7,7,6,4,5,18,17,5,6,4,23,18,1,17,20,17,23,16,17,18,20,1,23,20,21,22,16,20,22,23,19,18,19,21,11,18,16,19,0,21,20,22,23,17,4,5,6,7,7,4,6,5,4,0,9,11,1,5,0,10,2,3,11,9,10,10,10,9,8,8,7,7,19,0,18,16,23,18,21,6,6,5,4,18,19,21,20,22,19,22,19,18,19,23,19,18,19,18,16,17,17,17,18,17,17,17,22,23,23,19,21,19,19,18,19,22,22,16,19,17,20,17,18,17,21,16,20,16,23,16,16,16,18,20,1,22,3,9,3,0,3,21,22,23,19,20,21,20,16,19,19,1,16,21,2,3,0,7,19,3,23,3,0,1,3,0,6,8,0,3,3,2,1,0,2,1,0,0,0,0,9,0,21],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAACMAAQAAAAAAAAIAAAAABwADAAAAAAcAJIgAAAAcAF0AAAAAHABdGwEAABwABQAEAQAAAAAABJqZmT4EAASamZk+BwAEmpmZPgAABJgEAAABAAAHAAAABABdGwEAAAAAAgABAQIAAAcAAAAEAF0bAQAAAAACAAEBAwAABwAAAAQAXRsBAAAAAAIAAQEEAAAHAAAABABdGwEAAAAAAgABAQUAAAcAAAAEAF0bAQAAAAACAAEBBgAABwAAAAQAXRsBAAAAAAIAAQEHAAAHAAAABABdGwEAAAAAAgABAQgAAAcAAAAEAF0bAQAAAAACAAEBCQAABwAAAAQAXRsBAAAAAAIAAQEKAAAHAAAABABdGwEAAAAAAgABAQsAAAcAAAAEAF0bAQAAAAACAAEBDAAABwAAAAQAXRsBAAAAAAIAAQENAAAHAAAABABdGwEAAAAAAgABAQ4AAAcAAAAEAF0bAQAAAAACAAEBDwAABwAAAAQAXRsBAAAAAAIAAQEQAAAHAAAABABdGwEAAAAAAgABAREAAAcAAAAEAF0bAQAAAAACAAEBEgAABwAAAAQAXRsBAAAAAAIAAQETAAAHAAAABABdGwEAAAAAAgABARQAAAcAAAAEAF0bAQAAAAACAAEBFQAABwAAAAQAXRsBAAAAAAIAAQEWAAAHAAAABABdGwEAAAAAAgABARcAAAcAAAAEAF0bAQAAAAACAAEBGAAABwAAAAQAXRsBAAAAAAIAAQEZAAAHAAAABABdGwEAAAAAAgABARoAAAcAAAAEAF0bAQAAAAACAAEBGwAABwAAAAQAXRsBAAAAAAIAAQEcAAAHAAAABABdGwEAAAAAAgABAR0AAAcAAAAEAF0bAQAAAAACAAEBHgAABwAAAAQAXRsBAAAAAAIAAQEfAAAHAAAABABdGwEAAAAAAgABASAAAAcAAAAEAF0bAQAAAAACAAEBIQAABwAAAAQAXRsBAAAAAAIAAQEiAAAHAAAABABdGwEAAAAAAgABASMAAAcAAAAEAF0bAQAAAAACAAEBJAAABwAAAAQAXRsBAAAAAAIAAQElAAAHAAAABABdGwEAAAAAAgABASYAAAcAAAAEAF0bAQAAAAACAAEBJwAABwAAAAQAXRsBAAAAAAIAAQEoAAAHAAAABABdGwEAAAAAAgABASkAAAcAAAAEAF0bAQAAAAACAAEBKgAABwAAAAQAXRsBAAAAAAIAAQErAAAHAAAABABdGwEAAAAAAgABASwAAAcAAAAEAF0bAQAAAAACAAEBLQAABwAAAAQAXRsBAAAAAAIAAQEuAAAHAAAABABdGwEAAAAAAgABAS8AAAcAAAAEAF0bAQAAAAACAAEBMAAABwAAAAQAXRsBAAAAAAIAAQExAAAHAAAABABdGwEAAAAAAgABATIAAAcAAAAEAF0bAQAAAAACAAEBMwAABwAAAAQAXRsBAAAAAAIAAQE0AAAHAAAABABdGwEAAAAAAgABATUAAAcAAAAEAF0bAQAAAAACAAEBNgAABwAAAAQAXRsBAAAAAAIAAQE3AAAHAAAABABdGwEAAAAAAgABATgAAAcAAAAEAF0bAQAAAAACAAEBOQAABwAAAAQAXRsBAAAAAAIAAQE6AAAHAAAABABdGwEAAAAAAgABATsAAAcAAAAEAF0bAQAAAAACAAEBPAAABwAAAAQAXRsBAAAAAAIAAQE9AAAHAAAABABdGwEAAAAAAgABAT4AAAcAAAAEAF0bAQAAAAACAAEBPwAABwAAAAQAXRsBAAAAAAIAAQFAAAAHAAAABABdGwEAAAAAAgABAUEAAAcAAAAEAF0bAQAAAAACAAEBQgAABwAAAAQAXRsBAAAAAAIAAQFDAAAHAAAABABdGwEAAAAAAgABAUQAAAcAAAAEAF0bAQAAAAACAAEBRQAABwAAAAQAXRsBAAAAAAIAAQFGAAAHAAAABABdGwEAAAAAAgABAUcAAAcAAAAEAF0bAQAAAAACAAEBSAAABwAAAAQAXRsBAAAAAAIAAQFJAAAHAAAABABdGwEAAAAAAgABAUoAAAcAAAAEAF0bAQAAAAACAAEBSwAABwAAAAQAXRsBAAAAAAIAAQFMAAAHAAAABABdGwEAAAAAAgABAU0AAAcAAAAEAF0bAQAAAAACAAEBTgAABwAAAAQAXRsBAAAAAAIAAQFPAAAHAAAABABdGwEAAAAAAgABAVAAAAcAAAAEAF0bAQAAAAACAAEBUQAABwAAAAQAXRsBAAAAAAIAAQFSAAAHAAAABABdGwEAAAAAAgABAVMAAAcAAAAEAF0bAQAAAAACAAEBVAAABwAAAAQAXRsBAAAAAAIAAQFVAAAHAAAABABdGwEAAAAAAgABAVYAAAcAAAAEAF0bAQAAAAACAAEBVwAABwAAAAQAXRsBAAAAAAIAAQFYAAAHAAAABABdGwEAAAAAAgABAVkAAAcAAAAEAF0bAQAAAAACAAEBWgAABwAAAAQAXRsBAAAAAAIAAQFbAAAHAAAABABdGwEAAAAAAgABAVwAAAcAAAAEAF0bAQAAAAACAAEBXQAABwAAAAQAXRsBAAAAAAIAAQFeAAAHAAAABABdGwEAAAAAAgABAV8AAAcAAAAEAF0bAQAAAAACAAEBYAAABwAAAAQAXRsBAAAAAAIAAQFhAAAHAAAABABdGwEAAAAAAgABAWIAAAcAAAAEAF0bAQAAAAACAAEBYwAABwAAAAQAXRsBAAAAAAIAAQFkAAAHAAAABABdGwEAAAAAAgABAWUAAAcAAAAEAF0bAQAAAAACAAEBZgAABwAAAAQAXRsBAAAAAAIAAQFnAAAHAAAABABdGwEAAAAAAgABAWgAAAcAAAAEAF0bAQAAAAACAAEBaQAABwAAAAQAXRsBAAAAAAIAAQFqAAAHAAAABABdGwEAAAAAAgABAWsAAAcAAAAEAF0bAQAAAAACAAEBbAAABwAAAAQAXRsBAAAAAAIAAQFtAAAHAAAABABdGwEAAAAAAgABAW4AAAcAAAAEAF0bAQAAAAACAAEBbwAABwAAAAQAXRsBAAAAAAIAAQFwAAAHAAAABABdGwEAAAAAAgABAXEAAAcAAAAEAF0bAQAAAAACAAEBcgAABwAAAAQAXRsBAAAAAAIAAQFzAAAHAAAABABdGwEAAAAAAgABAXQAAAcAAAAEAF0bAQAAAAACAAEBdQAABwAAAAQAXRsBAAAAAAIAAQF2AAAHAAAABABdGwEAAAAAAgABAXcAAAcAAAAEAF0bAQAAAAACAAEBeAAABwAAAAQAXRsBAAAAAAIAAQF5AAAHAAAABABdGwEAAAAAAgABAXoAAAcAAAAEAF0bAQAAAAACAAEBewAABwAAAAQAXRsBAAAAAAIAAQF8AAAHAAAABABdGwEAAAAAAgABAX0AAAcAAAAEAF0bAQAAAAACAAEBfgAABwAAAAQAXRsBAAAAAAIAAQGAAAAHAAAABABdGwEAAAAAAgABAYEAAAcAAAAEAF0bAQAAAAACAAEBggAABwAAAAQAXRsBAAAAAAIAAQGDAAAHAAAABABdGwEAAAAAAgABAYQAAAcAAAAEAF0bAQAAAAACAAEBhQAABwAAAAQAXRsBAAAAAAIAAQGGAAAHAAAABABdGwEAAAAAAgABAYcAAAcAAAAEAF0bAQAAAAACAAEBiAAABwAAAAQAXRsBAAAAAAIAAQGJAAAHAAAABABdGwEAAAAAAgABAYoAAAcAAAAEAF0bAQAAAAACAAEBiwAABwAAAAQAXRsBAAAAAAIAAQGMAAAHAAAABABdGwEAAAAAAgABAY0AAAcAAAAEAF0bAQAAAAACAAEBjgAABwAAAAQAXRsBAAAAAAIAAQGPAAAHAAAABABdGwEAAAAAAgABAZAAAAcAAAAEAF0bAQAAAAACAAEBkQAABwAAAAQAXRsBAAAAAAIAAQGSAAAHAAAABABdGwEAAAAAAgABAZMAAAcAAAAEAF0bAQAAAAACAAEBlAAABwAAAAQAXRsBAAAAAAIAAQGVAAAHAAAABABdGwEAAAAAAgABAZYAAAcAAAAEAF0bAQAAAAACAAEBlwAABwAAAAQAXRsBAAAAAAIAAQGYAAAHAAAABABdGwEAAAAAAgABAZkAAAcAAAAEAF0bAQAAAAACAAEBmgAABwAAAAQAXRsBAAAAAAIAAQGbAAAHAAAABABdGwEAAAAAAgABAZwAAAcAAAAEAF0bAQAAAAACAAEBnQAABwAAAAQAXRsBAAAAAAIAAQGeAAAHAAAABABdGwEAAAAAAgABAZ8AAAcAAAAEAF0bAQAAAAACAAEBoAAABwAAAAQAXRsBAAAAAAIAAQGhAAAHAAAABABdGwEAAAAAAgABAaIAAAcAAAAEAF0bAQAAAAACAAEBowAABwAAAAQAXRsBAAAAAAIAAQGkAAAHAAAABABdGwEAAAAAAgABAaUAAAcAAAAEAF0bAQAAAAACAAEBpgAABwAAAAQAXRsBAAAAAAIAAQGnAAAHAAAABABdGwEAAAAAAgABAagAAAcAAAAEAF0bAQAAAAACAAEBqQAABwAAAAQAXRsBAAAAAAIAAQGqAAAHAAAABABdGwEAAAAAAgABAasAAAcAAAAEAF0bAQAAAAACAAEBrAAABwAAAAQAXRsBAAAAAAIAAQGtAAAHAAAABABdGwEAAAAAAgABAa4AAAcAAAAEAF0bAQAAAAACAAEBrwAABwAAAAQAXRsBAAAAAAIAAQGwAAAHAAAABABdGwEAAAAAAgABAbEAAAcAAAAEAF0bAQAAAAACAAEBsgAABwAAAAQAXRsBAAAAAAIAAQGzAAAHAAAABABdGwEAAAAAAgABAbQAAAcAAAAEAF0bAQAAAAACAAEBtQAABwAAAAQAXRsBAAAAAAIAAQG2AAAHAAAABABdGwEAAAAAAgABAbcAAAcAAAAEAF0bAQAAAAACAAEBuAAABwAAAAQAXRsBAAAAAAIAAQG5AAAHAAAABABdGwEAAAAAAgABAboAAAcAAAAEAF0bAQAAAAACAAEBuwAABwAAAAQAXRsBAAAAAAIAAQG8AAAHAAAABABdGwEAAAAAAgABAb0AAAcAAAAEAF0bAQAAAAACAAEBvgAABwAAAAQAXRsBAAAAAAIAAQG/AAAHAAAABABdGwEAAAAAAgABAcAAAAcAAAAEAF0bAQAAAAACAAEBwQAABwAAAAQAXRsBAAAAAAIAAQHCAAAHAAAABABdGwEAAAAAAgABAcMAAAcAAAAEAF0bAQAAAAACAAEBxAAABwAAAAQAXRsBAAAAAAIAAQHFAAAHAAAABABdGwEAAAAAAgABAcYAAAcAAAAEAF0bAQAAAAACAAEBxwAABwAAAAQAXRsBAAAAAAIAAQHIAAAHAAAABABdGwEAAAAAAgABASsBAAcAAAAEAF0bAQAAAAACAAEBLQEABwAAAAQAXRsBAAAAAAIAAQEvAQAHAAAABABdGwEAAAAAAgABATEBAAcAAAAEAF0bAQAAAAACAAEBQgEABwAAAAQAXRsBAAAAAAIAAQFFAQAHAAAABABdGwEAAAAAAgABAUkBAAcAAAAEAF0bAQAAAAACAAEBbAEABwAAAAQAXRsBAAAAAAIAAQGJAQAHAAAABABdGwEAAAAAAgABAQ==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Marauder","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"-7,3,-53","LocalRotation":"-0.707106,-0.707106,0,0","ForceId":0,"TotalBlockCount":394,"MaxCords":"7,14,7","MinCords":"-7,0,-7","BlockIdslockState":"=0,394","AliveCount":394,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":15,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":394},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABHooC0NkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.9999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":83,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABMVdWUJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.7071067,0.7071067","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":81,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,0,0","2,1,0","-2,1,0","2,0,1","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,17,1,3,16,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABFwqOEJkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"6,-1,-2","LocalRotation":"0.7071067,0,0.7071067,0","ForceId":0,"TotalBlockCount":105,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1626,1630,1634,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605],"BlockState":"=0,56","AliveCount":56,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":79,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":56},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABOSQEkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":89,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABMXBJUJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":88,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,0,0","2,1,0","-2,1,0","2,0,1","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,17,1,3,16,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABJslwcFkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg_left-side","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"-6,-1,-2","LocalRotation":"-0.7071067,0,0.7071067,0","ForceId":0,"TotalBlockCount":105,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1626,1630,1634,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605],"BlockState":"=0,56","AliveCount":56,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":87,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":56},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABKIuDkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":116,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABBsrIkJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":115,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,1,0","-2,1,0","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4","2,0,1"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,1,3,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4,16],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABGcw3MBkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"6,-1,-15","LocalRotation":"-0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":104,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1630,1634,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605,1630],"BlockState":"=0,55","AliveCount":55,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":114,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":55},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABKjZFkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":119,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABIAedEJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":118,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,1,0","-2,1,0","2,0,1","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,1,3,16,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABPkuqUFkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"6,-1,-29","LocalRotation":"-0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":104,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1630,1634,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605],"BlockState":"=0,55","AliveCount":55,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":117,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":55},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABEZ3C0NkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgL8EAAQAAIA/BwAEAACAPwEABAAAgD8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":122,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABKg3H0JkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":121,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,0,0","2,1,0","-2,1,0","2,0,1","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,17,1,3,16,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABCZBEMJkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"6,-1,-42","LocalRotation":"-0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":105,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1626,1630,1634,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605],"BlockState":"=0,56","AliveCount":56,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":120,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":56},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABKjZFkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":125,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABIAedEJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":124,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,1,0","-2,1,0","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4","2,0,1","-2,0,1"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,1,3,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4,16,18],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABPkuqcFkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg_left-side","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"-6,-1,-15","LocalRotation":"0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":104,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605,1630,1634],"BlockState":"=0,55","AliveCount":55,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":123,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":55},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABKIuDkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":128,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABBsrIkJkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":127,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,1,0","-2,1,0","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4","-1,0,-1"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,1,3,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABIAw3EBkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg_left-side","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"-6,-1,-29","LocalRotation":"0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":102,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605,1588],"BlockState":"=0,53","AliveCount":53,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":126,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":53},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0","-1,0,0","-2,0,1","-4,0,3","-2,0,2","-1,0,1","-1,1,1","-1,-1,1","-2,1,2","-2,-1,2","-3,1,3","-3,-1,3","-1,1,0","-1,-1,0","-2,1,1","-2,-1,1","-3,1,2","-3,-1,2","-4,1,3","-4,-1,3","-4,0,4","-4,1,5","-4,-1,5","-4,1,7","-4,-1,7","-5,0,7","-3,0,4","-3,0,2","-3,0,3","-4,0,8","-4,0,9","-4,0,10"],"BLR":[0,23,23,23,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,16,0,12,0,12,18,16,23,16,10,23,23],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABJFTJkNkAAQAAPBBAAAEMgYAAB0AADEAAAA4AAAAAAAAAABkAAAAACoAJIgAAAAqAIZ7AAAAKgDsYgAAADEAXQAAAAAxAF0bAQAAMQAAAAQAAEhCAQAEAACAPwIABAAAgD8DAAQAAABABAAEAAAAPwgABAAAwD8AAAQAAAAAAAAEMwYAAB4AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAEBABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvx8AABwAAAA4AAAAAAAAAAABAAAAAA4AAgAAAAAjAF0bAQAAOAACAAQAAABABAAEAADIQgEABAAAgD8EAAQAAIA/BwAEAACAPwEABAAAgL8EAAQAAIC/BwAEAACAvw==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,0,6","LocalRotation":"0,0,0.999999,0","ForceId":0,"TotalBlockCount":32,"MaxCords":"0,1,10","MinCords":"-5,-1,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1588,1588,1608,1608,829,1606,1605,673,194,193,193],"BlockState":"=0,32","AliveCount":32,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":131,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":32}],"BLP":["0,0,0","0,-2,1","0,2,1","0,-2,2","0,2,2","0,-2,3","0,2,3","0,-2,4","0,2,4","0,-2,5","0,2,5","0,-2,6","0,2,6","0,1,3","0,-1,3","0,-1,4","0,1,4"],"BLR":[0,5,9,5,9,5,9,5,9,5,9,5,9,14,14,12,12],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABIFXi0JkAAQAAPBBAAAEMAYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"0,4,4","LocalRotation":"0,0,-0.707106,0.707106","ForceId":0,"TotalBlockCount":49,"MaxCords":"0,2,6","MinCords":"0,-2,0","BlockIds":[236,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1590,1590,1589,1589],"BlockState":"=0,17","AliveCount":17,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":130,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":17}],"BLP":["0,0,0","0,0,-1","1,0,-1","-1,0,-1","1,0,1","0,0,1","-1,0,1","-1,1,2","0,1,2","1,1,2","1,2,3","0,2,3","-1,2,3","-1,1,0","0,1,0","1,1,0","-1,2,1","0,2,1","1,2,1","1,3,2","0,3,2","-1,3,2","1,2,2","1,1,1","2,0,0","2,1,0","-2,1,0","2,0,1","-2,0,1","2,1,2","-2,1,2","2,2,3","-2,2,3","2,1,1","-2,1,1","2,2,2","-2,2,2","2,3,3","-2,3,3","2,2,1","-2,2,1","2,3,2","-2,3,2","2,3,4","-2,3,4","2,4,3","-2,4,3","1,4,3","-1,4,3","0,4,3","2,4,4","-2,4,4","-1,3,3","1,3,4","-1,3,4","0,3,4"],"BLR":[0,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,23,23,17,1,3,16,18,16,18,16,18,4,4,4,4,4,4,10,10,10,10,16,21,2,2,2,2,2,20,21,20,4,4,4],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"AAAAKgAAABkAAQAAAAAAAAIAAAAABAADAAAAAAsAJIgAAAASAF0AAAAAEgBdGwEAABIACQABAWQABMAG/kBkAAQAAPBBAAAELgYAAA==","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"marauder-salem_leg_left-side","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"-6,-1,-42","LocalRotation":"0.7071067,0,-0.7071067,0","ForceId":0,"TotalBlockCount":105,"MaxCords":"2,4,4","MinCords":"-2,0,-1","BlockIds":[236,673,1588,1588,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1626,1630,1634,1630,1634,1630,1634,1630,1634,1611,1610,1611,1610,1611,1610,1605,1605,1605,1605,1630,1630,1605,1605,1605,1605,1605,1605,1605,1589,1605,1605,1605],"BlockState":"=0,56","AliveCount":56,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":129,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":56},{"ContainedMaterialCost":0.0,"CSI":[-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0],"COL":null,"SCs":[],"BLP":["0,0,0"],"BLR":[0],"BP1":null,"BP2":null,"BCI":[0],"BEI":null,"BlockData":"AAAAKgAAACwAAQAAAAAAAAIAAAAABAADAAAAABIAJIgAAAAZAF0AAAAAGQBdGwEAABkACQABAQAABAAAAD8EAAQAAIA/ZAAEAADwQQAABDUGAAABAAlmb3J3YXJkZXI=","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAAA=","designChanged":false,"blueprintVersion":0,"blueprintName":"Spin / Turn block","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":235,"LocalPosition":"2,0,-24","LocalRotation":"0,0,0,-0.9999999","ForceId":0,"TotalBlockCount":1,"MaxCords":"0,0,0","MinCords":"0,0,0","BlockIds":[236],"BlockState":"0","AliveCount":1,"BlockStringData":[],"BlockStringDataIds":[],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":132,"PersistentBlockIndex":-1,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":1}],"BLP":["0,0,-13","8,5,-21","4,0,-23","-2,10,-40","4,10,-40","1,7,-26","5,0,-39","0,-2,-2","-2,-2,-10","4,0,-27","7,1,-26","0,-3,-39","2,10,-40","1,6,3","-8,1,-26","-1,2,3","-7,3,-36","-4,0,-27","3,6,0","2,-2,-10","-8,3,-46","8,1,-6","0,-4,-35","0,-3,-11","8,1,-26","-2,4,3","1,6,-25","-5,5,6","-4,10,-40","-7,2,-31","0,-1,4","8,1,-11","8,1,-21","-2,9,-39","7,3,-36","-7,2,-36","8,1,-16","-8,5,-36","-1,2,7","3,1,-37","-8,3,-53","-8,3,-26","3,8,-40","1,7,-39","5,0,-27","-6,0,-11","-8,1,-11","8,3,-26","-1,7,-39","5,7,-13","-3,7,-45","3,1,-39","6,0,-11","-4,1,-3","-2,2,7","6,0,-19","1,6,-24","-5,7,-13","8,5,-11","8,3,-16","0,5,3","7,1,-22","-8,5,-31","-8,3,-31","-2,6,2","-8,1,-36","-2,8,-40","-3,8,-40","7,6,-37","7,3,-16","8,3,-21","-5,0,-11","0,3,-44","8,3,-46","5,7,-38","6,1,-11","0,6,-23","-1,6,-25","8,4,-28","-4,6,-1","5,0,-23","-5,-1,-39","5,7,-28","0,-2,-28","4,0,-39","1,-1,-23","7,4,-12","0,-2,-1","0,-3,-15","-4,8,3","7,4,-32","-2,-2,-19","-1,-3,-39","-6,8,-41","-5,0,-39","2,-2,-19","1,1,-8","6,1,-26","-1,-2,-23","2,0,-25","1,-2,-23","-4,8,2","-7,6,-37","6,0,-39","-1,5,3","0,-3,-23","-2,-2,-35","8,5,-31","7,6,-32","-3,1,-37","-6,0,-39","5,-1,-11","-4,0,-39","-7,3,-31","7,3,-31","1,8,-26","8,5,-16","0,-3,-35","0,-3,-7","8,5,-36","0,-1,0","-2,3,3","8,5,-26","0,-3,-3","6,1,-21","3,1,-38","0,-3,-28","-3,1,-38","5,0,-19","-4,1,3","-7,6,-32","-5,-1,-11","-1,7,-25","-2,-2,-23","0,-2,-27","5,-1,-39","7,6,-27","-7,6,-27","7,6,-22","-2,0,-25","-1,-2,-27","0,-4,-39","-6,0,-3","1,7,-21","9,3,-51","-1,8,-22","0,6,-6","-8,5,-51","-6,7,-27","-4,2,-6","8,6,-49","0,9,-22","-8,2,-51","0,2,-2","8,5,-51","-8,3,-52","0,-4,-27","0,2,3","0,-4,-31","4,2,-6","8,6,-51","-1,9,-20","-8,0,-45","0,-2,-39","-4,9,-44","-9,4,-53","8,2,-51","-8,6,-49","8,4,-54","-4,3,-5","1,8,-20","-8,3,-36","0,1,0","0,-4,-43","8,3,-53","-5,7,-29","-8,6,-51","0,1,2","2,7,-39","-5,7,-30","8,4,-40","-5,7,-38","5,7,-25","-5,7,-25","-1,9,-22","5,7,-8","0,6,-20","5,7,-9","5,7,-18","-8,4,-33","-8,3,-54","4,9,-44","8,4,-13","5,7,-26","-8,4,-40","-5,7,-28","-5,7,-8","-1,6,-23","4,3,-5","7,6,-43","8,4,-52","5,7,-21","-1,7,-20","8,4,-18","7,4,-6","-8,4,-10","0,4,8","7,2,-44","4,1,-3","-5,7,-26","5,7,-36","5,7,-24","5,7,-23","2,-2,-23","2,-2,-27","-6,7,-37","8,8,-47","0,9,-24","8,4,-30","10,4,-53","10,4,-54","-2,2,3","-3,8,-6","0,2,-1","0,7,-43","8,4,-25","-8,7,-47","-1,8,-23","0,1,-44","5,7,-14","-4,2,-3","8,1,-50","-8,4,-52","-1,9,-25","-8,1,-6","2,6,2","3,7,-41","-3,1,-39","2,2,3","-2,1,-5","7,0,-3","5,0,-11","0,4,3","8,1,-36","8,7,-46","8,3,-31","8,3,-11","-8,3,-11","5,7,-31","-8,1,-31","-2,6,-41","2,6,-41","-3,7,-41","8,7,-47","-8,1,-50","10,3,-53","8,3,-54","-5,7,-9","8,2,-52","5,7,-15","-10,4,-53","-10,4,-54","8,5,-50","0,-4,-3","0,-3,-43","-10,3,-53","9,4,-53","1,9,-24","1,9,-25","-1,7,-24","1,9,-22","0,6,-21","5,7,-27","-9,3,-51","8,3,-52","1,9,-20","-8,5,-50","-8,4,-53","4,0,-11","3,9,-46","-8,8,-47","8,5,-53","-8,4,-54","8,4,-15","2,-2,-36","-2,-2,-36","-8,4,-28","0,-4,-7","0,7,-21","-8,2,-52","-8,7,-49","-1,-1,-27","1,-3,-31","-8,1,-49","3,0,1","-4,7,4","0,-3,1","-4,0,1","-1,-2,-32","4,0,1","7,4,-37","3,0,-7","6,4,-27","-6,0,-7","6,4,-37","1,7,-24","-1,0,-20","1,0,-23","3,3,-5","0,1,-8","1,-3,-3","-3,-2,-31","7,4,-17","4,7,-1","7,8,-45","-1,0,-22","7,9,-45","-7,9,-45","-8,8,-45","0,9,8","8,8,-45","3,-2,-11","-2,11,-44","2,7,4","-1,0,-23","6,4,-17","-7,4,-37","-5,0,-7","5,0,-7","1,-2,-11","0,-2,3","0,8,-22","7,4,-7","3,-2,-31","-3,-2,-27","6,0,-7","-1,0,-7","3,-2,-7","-1,8,0","-5,1,2","-2,-3,-3","2,-3,-3","1,-3,-19","2,-2,-3","7,4,-42","-4,7,-1","-6,5,5","0,-4,1","-2,-2,-43","0,8,4","0,7,7","6,4,-32","-7,8,-45","6,5,-27","1,0,-7","1,-3,-27","-1,0,-21","-2,1,-8","3,5,3","7,4,-22","6,4,-7","0,8,0","1,0,-24","8,2,-45","0,0,-24","-6,1,-7","7,4,-27","-6,4,-37","-8,1,-45","2,2,-5","-6,4,-32","-2,2,-5","-1,5,-26","6,4,-12","0,6,-25","2,-2,-43","8,2,-49","-7,4,-32","8,0,-2","8,1,-49","8,1,-45","6,1,-7","-5,1,-7","7,4,-2","0,1,-4","9,3,-47","-1,0,5","2,1,-7","0,2,-3","6,5,-12","6,5,-17","-5,2,-7","-1,-2,-43","4,2,-3","6,5,-37","8,5,-22","-9,3,-47","-2,2,-40","-3,5,3","1,-2,-43","-6,5,-32","-7,4,-7","0,0,-23","-7,4,-42","2,1,-24","-3,0,1","6,5,-22","-5,0,-27","1,8,4","7,0,-7","-6,2,-40","0,7,-41","-5,4,2","-8,0,-2","6,4,-22","1,-3,-23","-1,0,-24","-1,8,4","4,1,-43","2,7,3","1,7,-22","-8,2,-45","2,2,-40","0,3,-8","0,4,-8","2,-1,-3","1,8,0","0,0,-14","-2,7,3","1,0,-15","3,7,-45","-8,1,-38","5,2,-7","-6,5,-27","-2,0,-7","-7,6,-12","6,0,-27","2,2,-7","-5,7,2","-3,6,0","-3,1,-3","5,2,-6","0,-1,-23","0,-1,-27","6,0,-23","1,-2,-19","-5,2,-6","-3,0,3","0,-2,-19","-1,-1,-19","-1,-2,-19","1,-1,-19","0,-1,-19","-7,4,6","-6,2,-5","-3,0,-7","-2,-1,-3","4,0,-7","-2,0,1","-3,3,3","-8,0,-6","3,-2,-27","2,0,-7","8,0,-6","-2,4,7","3,-1,-3","-4,6,-5","-5,1,-3","-6,2,-7","-1,-1,-23","6,7,-12","-7,7,-42","1,8,-22","7,7,-42","7,6,-17","-4,8,-3","6,0,-3","5,0,-3","-2,5,3","-5,0,-3","-2,7,-39","-1,6,3","3,1,-3","6,2,-7","7,6,-7","-7,0,-3","1,-2,-1","0,-2,-23","-2,-2,-27","0,-2,-15","-6,0,-27","-1,1,-8","-4,2,5","8,1,-31","7,2,-31","-1,9,-19","-1,8,-19","-8,7,-46","0,6,3","8,3,-36","2,8,-40","4,0,-19","2,5,3","4,8,-3","1,9,-2","4,1,1","-4,0,-11","-8,5,-11","6,2,-5","3,-2,-19","-3,-2,-15","7,4,2","8,5,-41","6,2,-40","-5,2,-40","7,6,-12","-3,-2,-23","-1,-2,-11","-6,2,-37","6,2,-37","-6,1,-37","-5,1,1","1,-3,-39","3,-2,-23","3,11,-44","-6,6,-12","5,1,-37","2,11,-44","-2,-2,-3","-2,7,-43","3,2,-7","8,5,-7","-3,11,-44","1,1,-19","-7,4,-2","6,6,-12","8,2,-41","3,-2,-15","2,0,1","1,-1,-43","-8,0,-46","1,1,-23","1,2,-8","5,2,-40","0,5,-27","-7,0,-7","4,6,-5","4,6,-1","-3,-2,-7","-6,1,-36","6,1,-37","-1,-2,-1","5,1,1","0,0,5","6,3,-3","7,7,-43","4,6,-6","1,-2,-32","-4,0,-7","6,1,1","-3,3,-5","-3,-2,-11","-3,-1,-3","-6,5,-37","6,5,-32","6,1,-16","5,3,-6","-5,3,-2","5,3,-2","-1,-3,-3","-4,6,-6","5,0,0","-6,1,-31","2,2,-8","-5,3,-6","6,1,-31","2,1,-8","-2,2,-8","6,1,-36","-6,3,-3","-8,2,-41","8,1,-38","-8,4,-38","-4,4,-2","4,4,-3","-4,4,-3","3,4,-3","-3,4,-3","2,4,-3","-2,4,-3","1,4,2","4,4,-2","4,4,2","-4,4,2","4,4,1","-4,4,1","4,4,0","-4,4,0","4,4,-1","-4,4,-1","-1,4,2","-1,4,-3","2,3,2","-2,3,2","2,3,1","-2,3,1","2,3,0","-2,3,0","2,3,-1","1,4,-3","1,4,1","-1,4,1","1,4,0","-1,4,0","1,4,-1","-1,4,-1","1,4,-2","-1,4,-2","0,4,-3","-3,4,-2","2,5,0","-2,5,0","2,5,-1","-2,5,-1","2,5,-2","-2,5,-2","2,6,1","-2,6,1","-2,5,1","-1,6,1","1,6,0","-1,6,0","1,6,-1","-1,6,-1","1,6,-2","-1,6,-2","2,5,1","2,6,0","-3,4,2","3,4,1","-3,4,1","3,4,0","-3,4,0","3,4,-1","-3,4,-1","3,4,-2","3,4,2","-2,6,0","2,6,-1","-2,6,-1","2,6,-2","-2,6,-2","2,6,-3","-2,6,-3","2,5,-3","-2,5,-3","-2,3,-1","-5,6,-18","-5,6,-20","-1,1,-19","0,6,7","-4,-1,-15","-2,8,7","-8,5,-17","-3,0,-23","-5,6,-19","-8,5,-12","7,4,6","-6,1,-16","-6,4,-27","-2,0,-19","-5,0,-15","-2,0,5","-6,6,-20","1,9,8","-6,6,-25","-7,4,-24","5,6,6","-5,6,-15","-5,6,-17","-6,6,-16","-7,4,-16","3,3,9","-6,6,-24","4,6,7","-7,4,-26","-7,4,-12","-5,6,-14","-6,6,-26","6,4,6","-6,6,-10","-7,4,-19","-8,0,-17","1,3,-2","-1,3,-2","1,3,-3","-1,3,-3","1,1,3","-1,1,3","1,1,4","-1,1,4","-1,3,-1","2,3,-2","-2,3,-2","1,3,2","-1,3,2","1,3,1","-1,3,1","1,3,0","-1,3,0","1,3,-1","0,1,4","-6,6,-18","-8,0,-21","-6,6,-11","-7,1,-16","6,4,7","4,8,3","5,4,8","4,4,9","0,1,3","0,-3,-31","6,7,-7","-6,6,-19","-4,-1,-19","-6,7,-22","-6,7,-17","-6,7,-12","-8,1,-17","1,6,1","2,2,0","0,4,-1","2,2,-1","0,4,-2","2,2,-2","2,2,-3","3,5,2","3,3,-3","0,4,0","-2,2,1","-2,2,0","-2,2,-1","-2,2,-2","0,4,2","2,2,2","0,4,1","2,2,1","0,6,1","-1,1,-1","-1,1,-2","1,5,2","1,1,2","1,1,1","1,1,0","1,1,-1","1,1,-2","-1,1,0","0,6,0","0,6,-1","0,6,-3","-3,5,2","-3,3,-3","-2,2,-3","-1,5,2","-1,1,2","-1,1,1","-2,2,2","-2,4,-1","-3,5,-1","-2,4,-2","-3,5,-2","1,5,1","1,5,0","1,5,-1","2,4,2","-2,4,0","2,4,1","2,4,0","2,4,-1","3,5,-1","2,4,-2","3,5,-2","-1,5,-2","-2,4,1","3,3,2","-2,4,2","-3,3,2","-3,5,1","-3,3,1","-3,5,0","-3,3,0","-3,3,-1","-3,3,-2","0,6,-2","3,5,1","3,3,1","3,5,0","3,3,0","3,3,-1","3,3,-2","-1,5,1","-1,5,0","-1,5,-1","1,1,-3","-4,5,0","4,5,-1","-4,5,-1","4,5,-2","-4,5,-2","1,6,-3","-1,6,-3","1,2,-4","4,5,0","3,6,-2","-3,6,-2","3,5,-3","-3,5,-3","4,5,2","-4,5,2","4,5,1","-4,5,1","-1,2,-4","1,2,-1","-1,2,-1","1,2,-2","-1,2,-2","1,2,-3","-1,2,-3","0,5,-2","0,5,-3","-1,2,0","1,1,-4","-1,1,-4","2,3,-3","-2,3,-3","1,2,2","-1,2,2","1,2,1","-1,2,1","1,2,0","-3,6,-1","0,3,11","0,3,10","0,3,9","0,3,8","0,3,7","0,3,6","0,3,5","0,3,4","0,3,12","3,6,-3","1,5,-3","4,5,-3","-1,5,-3","-3,6,-3","-4,5,-3","-1,1,-3","0,3,14","0,3,13","0,3,3","-4,3,0","4,3,-1","-4,3,-1","4,3,-2","-4,3,-2","4,3,-3","-4,3,-3","3,6,-1","4,3,0","0,3,2","0,3,1","0,3,0","0,3,-1","0,5,-4","4,3,2","-4,3,2","4,3,1","-4,3,1","-7,4,-14","4,4,3","1,0,7","-1,5,12","-1,7,7","2,4,9","-4,-2,-19","1,2,7","5,4,2","-7,2,-11","1,7,7","2,3,3","5,7,2","1,4,3","-1,6,12","-2,3,11","-7,4,-17","1,0,-21","2,6,10","-8,1,-22","8,7,-49","4,3,7","-6,3,5","8,4,-53","-4,-2,-15","-7,4,-21","5,3,6","2,7,8","4,7,4","-5,7,-14","5,7,3","-2,3,7","4,8,-2","0,8,8","5,7,-11","-5,7,-23","-8,4,-13","-8,4,-18","-3,4,11","-1,6,11","5,7,-10","5,6,2","-5,7,-20","1,1,9","-5,7,3","-2,4,9","-8,4,-23","3,4,11","-5,7,-21","2,3,7","5,3,2","-8,4,-20","-5,7,-19","-5,7,-18","1,7,11","2,6,6","-7,5,-16","-6,1,-21","-4,4,9","-5,7,-24","-5,7,-16","1,1,5","2,4,13","2,3,11","2,2,9","-5,7,-15","-2,5,7","0,7,9","-8,4,-25","-5,6,-16","1,10,-39","2,1,7","5,7,-34","8,4,-10","-8,4,-30","8,4,-8","1,6,-22","-1,8,-20","5,7,-35","9,3,-54","1,9,-21","-5,7,-31","0,7,-23","-9,3,-54","-1,6,-24","1,7,9","-5,7,-36","9,4,-54","4,5,7","-2,-3,-19","1,0,-18","5,7,-19","8,4,-38","5,7,-39","0,9,-25","-5,7,-33","-1,3,3","10,3,-54","-1,6,-22","-5,6,-23","0,7,8","0,6,-22","1,-2,-27","5,7,-16","8,4,-23","8,4,-35","-5,7,-34","1,10,-46","2,4,3","3,3,3","1,5,3","-7,0,-23","5,7,-20","0,7,-24","0,9,-21","1,3,3","-1,6,-20","0,7,-25","-9,4,-54","-1,8,-24","-1,7,-23","1,6,-21","1,2,3","1,6,-20","1,-1,-27","-8,4,-8","0,9,-23","-5,7,-35","-1,8,9","1,0,-20","5,7,-33","-1,9,-24","0,8,-23","8,4,-33","0,7,-22","-2,1,-7","0,8,-21","8,0,-45","-1,4,3","-5,7,-39","5,7,-30","1,8,-24","5,7,-29","-4,-2,-23","-6,7,-7","-4,-1,-23","5,4,4","-7,4,-22","1,5,-22","-1,5,-22","-2,1,-24","-2,1,-19","-3,-2,-19","0,8,-42","0,5,-18","5,7,-2","-4,7,-17","4,2,5","-6,0,-15","-4,0,-15","-8,5,-22","-6,6,-15","3,2,7","-10,3,-54","4,6,3","-7,4,-27","2,4,7","0,0,-22","0,0,-20","2,1,-19","5,1,2","-7,6,-22","-7,6,-17","-7,0,-11","-3,0,-19","-6,5,-22","-2,0,-23","-6,5,-17","0,4,7","0,9,-39","-3,3,9","0,6,11","-6,6,-13","6,3,5","-3,7,-19","-2,8,3","2,5,11","3,6,8","-5,6,-13","-6,6,-23","-1,6,-19","-5,6,-21","-6,6,-14","-3,-1,-19","6,5,5","1,6,12","-1,7,11","-6,4,-7","-7,5,-20","1,5,12","-7,5,-24","-8,5,-53","4,2,1","1,2,8","-6,4,-17","3,2,3","4,1,3","-6,4,-12","5,5,6","-6,4,-22","-2,1,7","-6,5,-12","3,5,9","3,1,5","2,0,5","-6,0,-23","-2,5,11","0,0,-15","-2,4,13","-8,4,-15","-7,1,-17","-7,1,-11","-8,3,-16","4,5,3","0,5,-22","-3,9,-46","-5,0,-19","-4,0,-19","6,2,3","4,3,3","0,1,-19","-7,3,-16","-6,1,-12","5,2,4","0,0,-21","5,5,2","1,0,-19","4,4,5","-6,6,-21","3,5,5","1,8,9","-1,7,9","0,3,15","-1,0,-15","-5,7,-11","1,6,11","-1,0,-14","6,4,2","-7,1,-22","-5,7,-17","2,9,-20","0,6,12","-7,2,-16","-7,4,-11","-3,5,9","-1,0,-19","2,5,7","0,0,-19","3,3,5","-6,1,-17","-3,0,-15","-8,7,-41","-2,-1,-19","1,6,7","-3,7,-21","-2,7,-18","-5,0,-23","3,4,7","-6,1,-26","2,2,7","-3,7,-18","-8,3,-21","-8,5,-21","0,0,-18","-7,1,-21","-7,3,-21","-8,5,-16","6,5,1","-6,1,-11","4,7,0","-6,0,-19","-1,0,-18","-7,2,-21","-8,1,-16","-6,1,-22","-8,1,-21","-8,5,-26","-7,1,-12","-2,6,10","-4,0,-23","6,2,-39","6,6,-11","-1,1,5","2,9,-26","-1,-3,1","0,-1,8","-4,8,-6","-5,2,4","6,6,-30","6,6,-33","-4,-2,-27","0,10,-39","-4,10,-45","-4,5,7","3,7,-26","6,6,-31","3,7,-18","3,7,-27","5,7,-5","-1,-1,1","-1,-2,3","2,7,-18","6,6,-26","4,7,-27","1,8,-6","1,7,-27","7,1,-32","2,7,-27","6,6,-21","-2,10,-39","1,-2,3","3,7,-24","8,4,-5","8,0,-22","-2,-1,3","6,6,-24","5,6,-26","0,11,-40","5,2,-4","6,6,-19","1,9,-26","-8,3,-48","2,8,-22","6,6,-28","-3,3,5","-4,7,-40","8,3,-48","-4,3,-44","5,6,-38","0,6,-45","-3,7,-20","8,5,-5","9,3,-43","7,4,-45","-7,6,-45","7,8,-43","6,6,-39","-2,8,-26","1,3,-44","4,10,-45","2,10,-46","7,4,-39","6,6,-40","2,8,-6","6,6,-23","3,7,-19","6,6,-25","7,4,-31","5,6,-45","0,5,-26","3,10,-46","-1,1,9","6,6,-16","6,6,-29","7,4,-24","7,3,-21","7,3,-41","7,3,-26","6,1,-22","7,2,-43","4,7,-37","-7,1,-32","7,2,-21","-4,7,-32","7,2,-36","-6,3,-44","4,11,-43","6,1,-12","7,2,-26","-7,1,-26","-7,2,-41","-6,1,-27","7,1,-11","-4,9,-45","5,7,-17","5,7,-32","-4,11,-41","-4,11,-44","-3,7,-25","4,10,-42","-4,11,-42","7,1,-7","-7,1,-7","-4,2,1","-7,1,-36","2,11,-45","-2,11,-45","1,11,-45","4,10,-43","-4,10,-44","-1,10,-39","7,1,-16","-2,9,-23","-6,1,-32","6,1,-32","-7,2,-43","0,-5,-44","7,2,-41","7,2,-16","3,6,-45","6,3,-44","-3,-1,1","4,11,-45","2,9,-39","4,7,-12","0,9,-1","7,3,-45","7,1,-21","-7,1,-37","-8,5,-5","7,1,-12","2,10,-39","-5,7,-12","4,10,-41","7,4,-26","7,1,-36","-7,1,-31","7,1,-31","2,-2,-35","-1,0,1","7,1,-37","7,1,-17","-5,7,-27","-3,7,-23","3,7,-22","4,7,-32","3,11,-45","-7,3,-41","1,0,1","-2,9,-24","4,-2,-27","-2,-3,-35","-4,-2,-7","5,6,-23","-2,-3,-27","-5,7,-6","2,-3,-23","4,-2,-35","5,8,-41","2,7,-5","0,0,-7","-4,-2,-43","4,-2,-23","8,6,-41","4,7,-40","4,7,-39","7,5,-12","5,6,-21","-6,6,-5","-8,5,-4","5,7,-22","6,6,-13","6,5,0","-5,6,-38","-1,9,-26","-6,5,0","7,4,-9","-4,-2,-31","-8,7,-45","-2,-3,-43","3,7,-23","-6,6,-4","-4,-2,-35","2,6,-7","1,6,-7","-4,6,7","1,9,-1","2,11,-40","-8,4,-5","7,5,-32","2,11,-41","-2,-3,-31","7,8,-42","-1,2,8","1,9,-19","-3,1,5","7,5,-24","-1,9,8","-2,7,8","-3,8,4","-5,6,6","3,0,3","2,9,-19","7,8,-41","7,5,-20","-7,5,-40","4,-2,-43","0,3,-2","4,-1,-39","-4,-2,-39","3,7,-25","4,-2,-19","4,-2,-31","-6,2,3","-3,2,3","-4,3,7","-7,5,-12","-1,-1,5","7,5,-40","-7,5,-28","-7,5,-32","7,5,-36","-7,5,-36","1,-1,5","-2,3,-44","-6,2,-44","7,6,-4","0,-2,7","-4,6,-45","3,7,7","5,6,-37","-6,2,-1","-5,2,0","7,6,-5","8,5,-6","-4,3,3","-7,6,-6","-5,8,-41","1,0,-22","-2,8,-22","-4,-1,-43","3,7,-20","-1,6,-45","1,6,-45","-9,3,-43","-7,7,-45","8,4,-4","-5,3,2","-8,3,-47","7,7,-45","-2,7,-46","0,0,9","-5,6,-37","-3,7,-24","-3,7,-27","4,3,-44","2,7,-46","-5,7,-22","8,3,-47","0,11,-45","7,4,-29","4,-2,-39","0,1,8","-8,5,-6","-6,3,1","-7,6,-4","7,6,-45","2,-3,-39","-4,8,-5","-4,8,-4","-5,7,-5","-6,6,-6","-1,7,-27","2,9,-25","8,7,-41","-3,10,-46","6,6,-20","2,-3,-31","-7,6,-5","-5,7,-4","-2,9,-26","-2,9,-21","2,9,-21","2,7,-38","4,-2,-15","3,3,-44","2,3,-44","-3,1,-7","-3,3,-44","6,6,-45","-1,8,8","-5,6,-45","-1,10,-46","-1,3,-44","-5,3,-44","-2,-3,-39","4,-2,-11","-6,6,-45","-5,7,-32","0,0,-29","-5,6,-2","-5,6,-6","-3,4,7","0,7,-27","-6,0,-1","0,-2,-32","0,-3,-12","-1,7,-5","-7,8,-43","-2,-2,-11","-5,6,-40","3,8,4","-1,7,-1","5,6,-40","0,-3,-14","1,0,-31","-3,1,1","-4,7,-39","-3,-2,-43","3,-2,-43","0,9,-26","-6,4,7","-2,2,9","1,0,-13","1,0,-14","0,0,-30","-1,0,-13","6,6,-36","6,4,-45","-6,4,-45","-3,5,5","6,2,-44","7,5,-4","-3,7,-5","-1,0,-31","-8,1,-37","1,0,-29","-6,6,-34","8,1,-37","-7,4,-31","-7,4,-34","2,-2,-11","-6,6,-33","5,6,-9","3,8,-6","-5,6,-26","-7,1,-3","5,6,-12","-5,6,-12","-5,6,-32","5,6,-8","-6,6,-30","-7,4,-29","0,0,-31","-2,-2,-32","2,-2,-32","-6,6,-3","-1,6,-7","7,1,-3","-4,4,5","-8,1,-32","-3,9,-3","0,-2,-11","5,6,-11","3,9,-3","-5,8,-3","5,8,-3","5,3,-44","-7,4,-45","1,0,-30","4,8,-6","-5,4,8","0,-5,-31","0,-5,-35","-7,8,-41","-7,8,-44","1,7,3","7,8,-44","2,8,-1","0,-5,-43","-3,2,-40","-6,4,-2","-5,6,2","3,7,-1","0,-5,-11","0,-5,0","-8,0,-7","-6,1,-3","-3,7,-1","3,2,-40","0,-5,-27","0,-5,-19","6,6,-34","0,-5,-7","6,2,-1","8,0,-8","-1,7,3","-6,3,-7","-6,4,-6","-3,8,-5","0,-5,-23","3,7,-5","-1,0,-29","-6,5,1","-6,4,2","0,-5,-15","6,4,-2","-5,5,2","-8,6,-41","8,3,-45","1,7,-1","0,-5,1","-6,4,6","4,8,-5","-3,8,-1","3,8,-1","6,4,-6","3,8,-5","-1,0,-30","-1,6,7","3,1,-7","-2,10,-46","1,7,-5","6,8,-41","-3,7,-26","-3,7,7","0,-5,-39","6,1,-3","2,0,-39","6,6,-38","6,6,-35","0,8,9","0,8,-5","1,8,-5","-8,0,-8","-8,0,-12","6,3,1","-8,3,-45","0,-4,3","2,8,-5","0,-3,5","6,3,-7","-2,8,-1","-1,8,-5","8,0,-7","8,4,-6","5,7,-7","-4,10,-41","0,10,-46","-4,11,-45","5,7,-6","-5,6,-29","-5,6,-28","8,0,-17","-5,6,-8","0,11,-44","-4,10,-42","-1,11,-45","-4,11,-43","4,11,-42","4,11,-44","0,7,-18","4,9,-40","-2,7,-38","0,6,-19","5,6,-10","-5,6,-30","0,6,-29","-6,6,-39","-8,0,-27","-6,6,-35","-6,6,-29","0,6,-11","-1,6,-15","0,6,-15","0,6,-7","-5,6,-36","-7,4,-36","-5,6,-10","-8,0,-22","-6,6,-28","-2,7,-27","-4,5,3","-1,7,-19","4,11,-41","4,7,-17","-2,11,-40","1,11,-40","-2,8,-39","2,8,-39","-2,9,-25","4,10,-44","-4,7,-37","-3,6,-45","-2,11,-41","-1,11,-40","2,6,-45","0,7,-46","-1,7,-46","1,7,-46","-7,3,-26","6,1,-17","-7,1,-27","-7,3,-45","5,7,-12","-4,7,-27","-4,7,-22","-2,9,-20","-5,7,-37","0,9,-19","-7,8,-42","-7,2,-26","-6,1,1","-2,6,-45","-4,10,-43","5,7,-37","5,2,0","-5,7,-7","4,6,-45","-7,4,-9","-3,6,-7","3,-1,1","-5,2,-4","-6,6,-8","3,6,-7","8,1,-32","5,7,-4","8,1,-27","2,-1,3","5,6,-18","5,6,-14","5,6,-19","8,0,-27","5,6,-36","-6,6,-31","-7,4,-39","-6,6,-9","6,6,-3","-8,4,-6","-8,1,-27","-5,6,-11","-8,1,-7","0,0,-39","1,0,-39","-8,0,-41","1,8,8","1,-1,1","-1,0,-39","8,1,-17","5,6,-32","7,5,-3","8,1,-7","-1,2,-7","-3,0,-43","6,6,-5","6,6,-4","4,8,-4","-6,6,-38","5,6,-13","-5,5,-2","5,5,-2","4,7,-6","-3,11,-45","8,0,-32","0,7,-6","0,6,-37","7,4,-36","5,6,-30","-5,6,-9","-6,6,-40","1,6,-19","5,6,-29","4,9,-45","0,6,-33","-2,8,-5","5,6,-2","5,6,-15","-5,6,-31","-6,6,-36","5,6,-16","5,6,-20","5,6,-17","5,6,-31","1,6,-15","-8,0,-37","-8,0,-32","0,7,10","8,0,-12","8,0,-37","-2,6,-7","8,5,-4","1,-3,1","-4,7,-6","5,6,-6","7,4,-11","3,0,-3","-5,4,-2","-5,4,-6","-3,0,-11","-3,4,3","5,0,-15","7,9,-46","-3,7,-22","1,0,-3","8,8,-46","7,7,-41","-7,1,-39","5,6,-39","4,8,-44","-4,7,-12","-5,6,-39","-7,1,-38","1,8,-38","-2,11,-42","-7,9,-46","7,8,-46","-7,8,-46","1,7,-38","5,4,-6","0,8,-44","0,0,-3","2,-1,-27","4,8,-45","3,0,-11","-1,0,-3","3,8,-45","-2,11,-43","2,8,-46","-1,8,-38","-1,7,-38","-5,4,4","6,8,-45","4,2,-40","5,4,-2","-4,4,-40","1,2,-43","8,5,-38","2,-1,1","-8,1,-40","-8,5,-41","-4,1,-43","-3,2,-7","-1,-3,-11","1,-3,-11","6,2,-43","8,1,-41","-7,6,-41","7,1,-44","4,5,-40","4,4,-40","1,-3,-15","2,7,-43","-3,0,-3","2,0,-3","-2,0,-3","-3,8,-45","-4,8,-45","7,1,-38","-1,11,-44","8,3,-39","7,0,-39","8,1,-39","-4,-1,0","-1,1,-23","-1,-3,-15","4,8,2","4,0,-3","-4,8,-44","-3,0,-27","1,1,-43","2,0,-15","3,0,-27","-2,0,-15","6,0,-15","3,0,-15","2,0,-23","-1,0,7","0,0,-11","-6,4,-44","-7,1,-43","3,1,-43","-7,5,-3","2,1,-43","-7,4,-44","-1,2,-40","5,6,-27","-5,6,-27","-2,1,-43","3,4,-44","-1,0,-11","6,4,-44","4,4,-44","4,0,-15","3,0,-19","-4,0,-3","7,0,-27","-7,0,-27","7,0,-11","-4,0,-35","2,0,-11","-2,0,-11","2,0,-31","-4,4,-44","-1,1,-43","-5,8,-45","-8,8,-46","7,7,-46","-2,8,-46","3,4,3","-3,10,-45","-1,4,-44","5,8,-45","3,11,-43","7,1,-39","0,0,1","4,1,-7","-4,1,-7","-7,7,-41","-3,11,-43","1,4,-44","-6,8,-46","2,4,-44","-5,1,-43","1,11,-44","-3,2,7","1,2,-40","-3,1,-43","-6,8,-45","-8,4,-4","-5,3,6","2,0,-19","-7,5,-4","0,1,-43","-6,1,-43","7,1,-43","5,4,-44","0,4,-44","-2,4,-44","-1,7,-43","7,4,-44","-3,11,-42","1,7,-25","-8,5,-38","-8,4,-35","8,4,-20","2,2,-43","1,8,-21","-8,3,-40","1,7,-20","-1,1,-6","0,-4,-23","0,1,1","0,-4,-19","0,1,-1","-6,2,-41","-5,1,-37","0,2,-4","5,1,-7","6,7,-37","-3,-2,-3","6,7,-22","8,5,-32","-8,1,-12","5,1,-3","0,1,-2","0,2,-40","-7,0,-44","0,8,-20","1,1,-6","-5,7,-10","8,5,-37","-8,5,-32","-1,1,-24","-7,2,-44","-1,7,-22","8,0,-46","6,-1,-11","0,1,-3","6,2,-38","-6,2,-38","0,-4,-11","-1,-3,-43","-6,2,-43","7,5,-43","-4,4,3","8,1,-40","-6,2,-39","0,8,-24","1,0,5","1,9,-23","-7,4,-43","7,4,-43","0,-4,-15","-1,-3,-7","6,2,-41","-1,-1,-43","0,8,-25","-6,2,-42","-1,9,-21","0,2,7","0,9,-20","-7,6,-43","-1,9,-23","-2,2,-43","1,-3,-43","-7,6,-7","-2,7,4","-8,3,-39","-5,0,0","6,2,-42","-7,5,-43","8,1,-12","2,-1,-43","-6,-1,-11","4,2,-7","1,6,-23","-1,-3,-35","-1,8,-1","-8,5,-39","-8,2,-49","-6,7,-32","-2,2,-7","-4,7,0","-7,1,-44","7,0,-44","7,1,-27","8,3,-40","-8,5,-40","8,5,-40","-1,6,-41","-8,3,-38","-8,1,-39","-1,6,-21","-8,3,-41","6,7,-27","8,3,-41","-7,7,-43","7,6,-41","8,5,-39","3,11,-42","8,3,-38","-4,2,-40","3,-2,-3","-4,1,1","-1,-3,-27","-2,-1,-43","8,5,-27","-1,2,-43","1,-3,-7","4,-1,0","-8,1,-41","0,6,-24","7,0,-23","1,-3,-35","2,7,-26","2,9,-23","-4,2,-7","-1,2,-8","-3,8,3","-7,4,2","8,5,-17","0,7,-20","0,6,-41","0,1,-39","1,5,-26","6,1,-27","0,4,-4","2,1,-23","0,5,-8","1,1,-24","-1,-3,-31","-8,5,-37","0,2,-43","0,3,-4","8,5,-12","-8,5,-7","-8,5,-27","3,8,3","6,7,-17","2,7,-22","-2,-1,1","-2,7,-26","-2,7,-22","-2,1,-23","-1,-3,-19","-4,5,-40","6,7,-32","-1,-3,-23","1,6,-41","6,1,-43","2,9,-3","-5,6,-25","-2,6,6","-5,6,-24","5,6,-24","-6,5,-7","-3,4,-43","-3,3,-43","1,7,-18","0,7,-1","5,7,-3","-3,6,4","-7,5,-8","-3,7,3","-2,9,-3","-5,7,-3","8,7,-45","-2,-2,-39","3,4,-43","-3,6,-43","0,7,-39","0,-1,-43","3,3,-43","0,-2,-43","3,6,-43","3,7,-43","-3,5,-43","-5,7,-2","7,2,-7","3,2,-43","-4,-2,-11","-1,6,-29","5,6,-34","-1,6,-37","6,5,-7","-1,6,-33","1,6,-33","1,6,-29","8,4,-45","-2,-3,-23","-5,6,-35","-6,-1,-7","0,7,-5","7,4,-41","8,6,-45","-8,4,-45","1,6,-37","-4,6,3","-1,9,-1","3,2,-5","-6,7,-46","7,5,-8","6,7,-46","2,7,-1","-2,7,-1","4,-2,-7","3,6,4","5,6,-33","2,1,-5","-1,9,3","5,6,-22","-3,2,-5","4,7,-5","0,7,3","3,7,3","2,-3,-43","-2,9,-19","2,-2,1","6,6,-15","7,4,-16","2,-3,-27","7,5,-28","6,0,-1","3,1,1","7,4,-14","6,6,-10","-2,-3,-15","2,-3,-11","-2,-3,-11","2,-3,-7","-3,2,-43","-5,7,-40","7,5,-16","-2,1,3","5,6,-28","2,9,-24","6,6,-14","6,6,-6","6,6,-9","6,6,-8","4,7,-22","-1,7,-18","-4,9,-40","-3,-2,0","-2,-2,1","7,6,-6","6,6,-18","7,4,-19","3,7,-21","0,3,-3","3,-2,0","2,8,-26","-4,7,-7","3,5,-43","-2,-3,-7","2,-3,-19","2,-3,-35","-7,3,-7","-5,6,-33","4,7,-7","-7,3,-11","5,6,-25","-3,7,-43","2,-2,-39","-7,4,-6","2,1,3","6,-1,-39","7,3,-7","-7,2,-7","-4,8,-2","1,6,-11","7,3,-11","-6,-1,-35","6,-1,-35","5,7,-40","2,-3,-15","7,2,-11","-5,6,-34","-6,-1,-39","1,9,3","6,0,-35","1,0,-43","-1,0,-43","1,9,7","-1,9,7","1,2,-7","7,4,-34","4,-1,-43","-3,0,-39","-5,0,-31","8,0,-41","2,0,-43","-7,0,-39","3,-2,-39","-7,0,-43","3,0,-39","3,-1,-43","-2,0,-39","2,-1,-39","-6,0,-43","2,0,-35","-3,-1,-39","-2,-1,-23","3,0,-43","-3,-1,-23","-4,-1,-39","5,6,-35","-4,0,-43","-8,0,-26","6,0,-43","-3,-2,-39","-5,0,-43","3,-1,-15","-4,0,-31","1,7,-43","-3,4,-44","1,0,-35","4,0,-43","-3,-1,-43","8,0,-21","8,0,-26","3,0,-23","1,0,-11","5,1,-43","5,0,-31","2,11,-43","3,0,-31","-3,0,-31","-6,0,-35","5,0,-43","7,0,-35","0,0,-35","8,0,-36","-8,0,-36","3,-2,-35","0,0,-43","3,0,-35","-3,0,-35","-3,-2,-35","-7,0,-35","-1,0,-35","-5,4,-44","5,0,-35","-5,0,-35","-3,-1,-11","6,8,-46","6,0,-31","-6,0,-31","-2,-1,-31","4,-1,-7","4,-1,-23","-6,5,-6","4,0,-35","4,-1,-15","-3,-1,-15","-2,-1,-7","-5,5,-6","3,-1,-11","2,-1,-11","-2,0,-35","-2,-1,-39","2,-1,-15","-3,-1,-27","2,-1,-19","-5,-1,-35","6,5,-6","5,5,-6","8,1,-22","-1,6,-11","-8,6,-45","-7,4,-41","7,4,-21","-8,5,-45","8,5,-45","4,0,-31","-5,-1,-7","-4,7,-5","-4,-1,-35","-5,6,-22","5,-1,-35","-2,7,-5","-3,6,8","2,-1,-7","3,-1,-35","-7,7,-46","3,-1,-27","2,8,7","3,-1,-23","-4,-1,-27","-2,0,-31","3,10,-45","4,-1,-35","2,-1,-35","-2,-1,-35","3,-1,-39","-3,-1,-7","-4,-1,-31","4,-1,-27","3,-1,-31","-3,-1,-31","4,-1,-31","-3,-1,-35","-2,-1,-15","4,-1,-11","3,-1,-7","7,0,-43","-4,-1,-7","2,-1,-31","-4,-1,-11","4,-1,-19","2,11,-42","-2,-1,-27","2,8,3","-2,0,-43","2,-1,-23","3,-1,-19","-2,-1,-11","1,5,-2","-5,-1,-40","5,-1,-40","-6,-1,-40","6,-1,-40","4,-1,-3","-4,-1,-3","4,-2,-1","-4,-2,-1","4,-2,-2","-4,-2,-2","4,-2,-3","-4,-2,-3","-5,-1,-20","5,-1,-20","-6,-1,-20","6,-1,-20","-7,0,-31","7,0,-31","-8,0,-31","8,0,-31","-7,0,-19","7,0,-19","-7,0,-15","7,0,-15","-8,0,-13","8,0,-13","-5,-1,-31","5,-1,-31","-6,-1,-31","6,-1,-31","-6,-1,-12","6,-1,-12","-6,-1,-18","6,-1,-18","-6,-1,-19","6,-1,-19","1,0,-25","0,0,-25","-1,0,-25","5,-1,-4","6,-1,-4","-6,-1,-27","6,-1,-27","-5,-1,-27","5,-1,-27","-6,-1,-17","6,-1,-17","-5,-1,-17","5,-1,-17","-5,-1,-12","5,-1,-12","-6,-1,-13","6,-1,-13","-2,0,-24","0,1,-20","0,1,-23","0,1,-24","0,2,-23","-1,2,-23","1,2,-23"],"BLR":[4,0,0,3,1,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,11,0,0,0,0,0,10,18,3,0,0,0,0,21,0,0,0,0,10,1,0,18,9,11,0,0,0,16,9,1,1,3,0,0,0,0,16,3,0,16,0,9,0,18,0,0,11,11,3,0,16,0,6,9,1,0,0,10,6,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,3,1,0,0,0,0,0,3,3,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,3,0,18,1,0,1,0,0,0,3,1,3,2,0,0,0,10,0,8,14,2,3,0,2,10,12,0,2,18,0,0,0,0,2,9,0,2,0,0,12,2,2,10,9,18,0,0,0,3,2,0,20,3,6,3,1,3,9,1,0,1,1,6,17,0,6,1,6,3,3,3,10,0,16,1,11,6,12,6,10,19,0,3,1,1,1,0,0,3,2,10,6,16,9,0,1,0,0,6,2,0,0,1,0,14,18,10,0,0,18,1,0,22,0,0,0,0,9,16,16,18,1,0,21,20,16,2,14,16,19,3,14,1,18,11,16,0,0,18,0,9,10,11,9,0,0,0,16,9,18,2,0,3,2,2,2,6,7,5,6,0,0,14,2,0,0,0,0,18,0,18,11,16,2,0,11,0,11,9,18,21,11,0,0,0,2,0,0,0,1,3,11,0,9,0,10,0,22,11,0,0,0,11,0,2,2,0,0,0,0,0,0,18,12,12,0,0,2,0,18,0,0,0,0,11,0,15,0,0,22,23,0,2,11,0,21,0,0,0,2,9,0,3,9,1,18,11,0,0,0,0,16,0,0,0,0,16,0,0,0,0,0,15,15,10,0,0,15,9,0,10,0,0,13,0,0,0,2,0,15,0,0,0,10,2,0,18,11,0,22,0,0,0,23,0,10,0,0,0,0,4,0,4,3,3,10,13,0,0,0,10,3,0,0,0,0,0,0,0,0,18,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,10,3,3,0,0,0,0,0,21,0,0,0,3,0,0,0,0,2,0,0,18,0,0,0,1,11,0,16,9,0,0,0,3,0,0,0,0,0,0,16,0,10,8,0,0,9,9,11,0,0,0,0,10,0,21,10,0,12,10,9,10,0,18,0,16,0,0,0,14,0,10,8,0,0,0,0,0,0,0,0,0,0,0,3,0,9,0,16,9,0,0,13,15,0,0,0,0,0,0,16,0,10,0,0,22,10,0,0,18,1,6,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,9,0,1,3,1,3,1,3,1,0,11,9,11,9,11,9,11,9,0,1,5,7,5,7,5,7,0,0,7,13,15,13,15,13,15,13,5,0,1,3,1,3,1,3,1,3,3,0,0,0,0,0,0,0,0,0,3,1,1,0,0,0,18,11,0,1,11,16,0,9,0,0,18,3,0,3,3,16,1,1,3,3,16,3,16,3,0,1,3,0,3,3,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,3,0,3,0,16,0,16,16,0,0,1,3,0,3,3,3,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,9,11,9,15,13,0,11,1,3,1,3,11,9,11,9,0,7,5,7,5,7,5,9,0,5,0,0,13,15,7,5,7,5,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,7,5,7,5,7,1,5,0,0,0,0,10,5,7,5,7,3,0,16,0,0,0,12,10,0,0,0,0,1,0,0,0,0,0,16,11,2,16,18,2,12,3,16,16,16,3,0,0,0,0,1,3,6,6,18,0,1,0,3,0,0,0,6,16,3,0,0,6,3,3,0,0,0,0,18,3,3,0,0,0,0,3,0,0,6,1,2,16,1,6,6,6,16,9,1,16,10,3,0,18,18,0,3,10,16,12,0,1,6,1,9,3,0,22,18,20,12,0,0,1,6,6,3,0,0,0,0,0,1,0,9,0,18,0,10,9,9,3,0,16,0,6,9,3,0,17,1,9,10,6,0,0,10,0,0,3,1,9,1,12,3,0,0,0,16,18,2,0,0,0,2,0,1,16,0,0,11,3,16,23,0,0,0,0,0,0,16,1,1,0,0,13,0,13,10,0,18,0,3,16,11,0,16,16,1,3,0,1,3,0,16,0,0,9,0,0,0,2,0,8,9,0,16,9,16,9,18,13,16,16,16,0,18,4,0,6,11,0,18,0,0,1,0,0,16,0,0,0,9,16,0,0,17,0,3,0,0,0,0,4,3,0,4,0,11,0,0,0,0,3,18,0,0,0,0,9,0,21,0,0,11,8,0,0,0,0,11,18,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,11,18,0,3,1,0,2,18,0,2,18,1,1,12,2,19,18,9,1,9,10,1,0,18,8,1,3,2,10,9,10,1,3,16,9,5,0,18,1,3,0,0,1,2,11,0,1,0,8,9,6,3,6,11,1,16,2,6,1,1,0,6,17,0,1,1,2,1,9,1,1,6,0,0,0,1,1,1,0,0,0,11,0,3,11,0,1,0,14,1,11,0,0,0,9,0,19,0,0,0,3,11,3,3,0,0,0,0,2,2,2,3,1,2,0,0,9,11,0,10,0,0,6,14,18,2,20,3,0,0,0,11,3,9,1,0,3,1,0,0,0,0,0,9,9,0,11,9,3,2,0,0,3,12,12,12,21,12,2,12,12,0,0,0,12,12,20,8,8,0,3,1,0,0,1,17,1,2,19,1,12,0,12,9,0,12,10,10,18,0,1,7,0,1,12,1,8,0,18,0,0,18,18,18,16,0,1,0,0,12,0,0,12,9,12,12,18,0,18,0,18,0,0,0,0,0,16,6,14,0,0,6,16,3,0,0,1,1,0,3,0,0,0,0,9,6,6,18,1,4,0,11,3,14,0,1,11,10,6,14,0,9,2,1,12,2,3,0,0,6,12,3,3,3,0,10,0,20,0,1,12,3,3,2,3,1,20,12,6,6,0,6,6,0,6,0,6,6,12,12,6,0,4,0,0,0,10,21,0,3,0,3,0,1,16,0,3,3,7,0,8,0,0,0,18,0,4,4,7,4,1,2,2,0,14,0,0,7,11,4,3,9,3,3,0,3,3,2,1,11,3,1,1,3,3,3,7,0,0,11,10,9,0,11,3,0,3,1,3,1,6,2,7,2,18,0,0,3,3,0,1,0,0,8,0,0,0,0,2,0,0,0,8,0,0,1,0,0,2,0,0,0,0,0,0,4,0,0,0,0,0,21,0,0,0,0,1,0,0,0,0,7,0,0,0,0,0,11,18,0,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,5,0,1,0,2,2,1,1,0,1,0,1,2,3,1,1,8,16,21,0,3,1,0,3,0,3,3,0,0,0,10,1,3,1,0,3,10,0,1,0,3,3,0,21,20,0,3,1,6,3,0,6,14,14,14,0,11,11,0,0,1,1,0,0,0,3,0,18,6,1,0,0,0,6,3,10,16,0,3,10,9,1,9,16,3,3,3,0,3,3,3,3,9,7,11,1,11,0,0,0,0,0,0,9,3,1,9,10,0,3,0,1,3,3,0,0,3,2,0,0,0,1,3,1,3,0,3,17,0,0,0,3,1,3,3,3,3,3,0,0,0,0,0,0,10,0,16,1,0,1,0,0,0,0,0,0,0,11,0,9,3,1,3,0,1,1,1,8,10,0,0,0,0,0,0,0,0,14,0,0,1,10,3,8,0,0,0,2,0,0,0,1,0,3,0,0,10,0,0,3,0,1,19,0,0,0,12,0,0,0,3,14,3,0,5,0,1,18,0,0,1,0,0,0,0,0,0,0,0,0,0,18,0,9,0,0,3,0,9,10,3,1,0,11,0,11,11,0,0,0,0,0,0,0,0,0,0,9,0,0,11,14,0,0,15,9,0,10,3,0,0,0,1,10,11,1,11,0,0,18,10,0,0,4,18,0,0,0,0,0,11,9,9,12,11,10,3,3,6,6,0,2,7,9,1,0,0,0,0,1,20,0,0,1,0,1,9,11,0,0,8,17,2,3,3,9,11,2,17,20,14,12,0,3,1,0,0,1,0,0,1,1,2,0,10,10,10,0,0,3,0,10,1,10,0,10,0,10,0,0,1,0,7,18,3,0,9,0,12,10,18,0,1,3,0,3,10,0,17,19,9,5,3,1,0,7,3,18,12,1,12,1,3,1,10,5,2,0,0,0,0,9,0,0,16,0,0,0,0,16,0,10,10,19,18,9,0,0,2,16,11,2,0,0,2,0,11,0,0,9,11,11,17,1,16,0,18,18,0,0,0,1,0,0,0,3,20,0,20,21,0,2,2,8,0,0,0,0,0,0,0,0,0,2,2,0,0,2,0,2,2,2,0,0,2,12,0,3,0,0,0,0,0,0,12,1,12,0,1,0,0,0,0,0,0,22,0,23,0,0,12,0,3,0,0,21,0,0,0,0,12,0,16,1,1,12,0,20,0,1,1,12,12,12,12,2,0,0,0,3,1,1,0,1,1,3,8,18,18,18,1,1,1,9,0,16,0,1,2,12,12,12,0,1,3,0,21,2,0,12,0,12,0,0,0,0,0,12,12,0,12,0,1,12,0,0,0,0,0,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,12,9,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,3,1,0,0,0,0,0,0,20,0,0,18,0,0,14,0,16,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,2,2,7,5,12,12,13,15,13,15,13,15,14,14,14,14,0,0,0,0,0,0,0,0,2,2,14,14,15,13,15,13,15,13,15,13,2,2,2,17,17,12,12,0,0,15,13,14,14,14,14,15,13,0,0,0,10,0,0,16],"BP1":null,"BP2":null,"BCI":[0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,31,0,0,0,0,0,0,0,0,0,30,0,0,0,31,0,31,0,0,0,31,31,0,0,0,0,0,0,0,27,0,30,31,0,0,30,31,0,0,0,0,0,0,31,0,0,0,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,30,0,0,30,0,0,30,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,27,0,27,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,27,31,0,0,0,0,0,0,0,0,0,0,0,0,27,0,27,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,31,0,0,0,0,31,0,31,31,0,0,0,0,31,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,31,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,27,27,0,0,27,0,27,0,27,0,0,0,31,0,0,0,0,0,27,0,0,0,27,0,0,27,0,0,0,0,0,0,0,0,0,0,0,27,27,0,27,27,0,27,27,27,0,27,0,0,27,0,0,0,0,27,27,0,27,0,27,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,31,0,31,31,0,0,31,0,0,31,0,0,31,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,31,0,0,0,31,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,29,0,0,0,0,0,0,0,0,0,0,0,31,1,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,30,0,0,0,30,31,0,0,0,0,0,0,0,0,30,0,0,0,0,31,0,0,0,0,0,0,31,31,0,0,0,31,0,31,0,0,0,0,0,0,31,0,0,0,0,0,31,0,0,0,0,0,0,31,0,28,0,31,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,31,0,31,0,31,0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,31,0,0,0,0,0,0,31,0,0,0,0,31,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,31,0,0,0,0,0,0,0,0,0,0,31,0,31,31,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,31,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,31,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,31,31,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,27,30,0,0,0,27,31,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,27,0,27,0,0,0,0,0,0,27,0,27,0,27,0,27,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,31,30,30,0,31,0,0,0,0,0,0,0,30,0,31,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,31,0,31,31,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"","VehicleData":"Vy4AAAAAAAAHAAAAAAAAAAAAAAAA8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABHKQEAAAAAAAcAAAAAAAAAAAAAAADBfVafAAAAAAcAAAAHAAAAAAAAAAAAAAQNAAAAOe0HAAAAAAAHAAAAAAABAAAAAAAAPjUUAAAAAAAHAAAAHAABAAAAAAAACgAEzczMPQsABM3MzD0MAATNzMw9DQAEzczMPVJDAAAAAAAABwAAAAAAAQAAAAAAAMRKAAAAAAAABwAAABUAAAAAAAAAAAAABNir70YBAAQoQbJFAwAEALKRRiveCgAAAAAABwAAAAgAAQAAAAAAAAAAAQABAAEAMo5QAAAAAAAHAAAAAAAAAAAAAAAA0KtlAAAAAAAOAAAADAAAAAAAAAAAAQAAAAAAAAAAAQECAAEBBAABAcInYQAAAAAABwAAAF4AAAAAAAAAAAAABAAA8EEKAAQAAMjBCwABAQ8ABAAAgkIQAAEBFAAEAAD6QxUAAQEZAAQAQJxFGgABATIABABAHEY3AAQAQBxGHgAEAACAPx8AAQEjAAQAAIA/JAABASgABAAAoEE=","designChanged":false,"blueprintVersion":127,"blueprintName":"Land Marauder","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":248,"LocalPosition":"13700.79,38.41285,-9546.937","LocalRotation":"0.004974246,-0.594641,0.01948804,0.8037398","ForceId":969544294,"TotalBlockCount":3615,"MaxCords":"10,11,15","MinCords":"-10,-5,-54","BlockIds":[227,1592,1590,1306,1328,1589,1590,366,291,1590,1590,1590,1309,1590,1591,1590,1590,1590,1590,291,1590,1592,1198,1590,1592,1590,327,1605,1324,1590,1297,1592,1592,1606,1590,1590,1592,1591,1590,226,669,1591,1588,1296,1590,1590,1591,1592,1296,219,1589,1605,1590,1590,1588,1590,329,219,1592,1592,1590,1296,1591,1591,1590,1591,1588,1588,1295,1590,1592,1590,1606,1590,219,1591,328,327,1600,1590,1590,1590,219,366,1590,1590,467,1590,669,1626,467,1590,1198,1605,1590,1590,1588,1591,1590,1589,1590,1605,1295,1590,1590,285,291,1592,1295,226,1590,1590,1590,1590,1590,1589,1592,1590,1590,1592,1590,1590,1592,1590,1591,226,669,226,1590,1606,1295,1590,327,1590,1590,1590,1295,1295,1295,1589,1590,1198,1588,341,1297,346,366,1612,1301,1589,1615,672,1588,57,1615,1590,1198,1590,1198,1589,1635,332,1590,366,1590,1301,1588,1612,1634,1296,341,1591,57,1198,669,219,1631,57,1588,219,1601,219,219,219,332,219,328,219,219,1600,1300,1590,1600,219,1601,219,219,336,1296,1588,1590,219,346,1600,1296,1601,1295,1612,1590,219,219,219,219,1590,1590,1301,1635,672,1601,1329,1328,1590,1592,57,1588,1601,1612,327,370,219,1590,1606,1590,672,1591,1590,1588,1605,1590,1297,1588,1590,1590,1592,673,1592,1592,1591,219,1591,1588,1588,1588,1615,1606,1301,1300,219,1606,219,1325,1324,1588,1198,1590,1301,1301,332,672,346,332,328,669,1297,1590,332,1588,1611,1590,1590,1631,1634,1630,1601,286,286,1600,1198,326,1606,1631,1590,1198,1590,1588,1606,1297,1606,1588,1606,467,1590,486,1590,486,346,461,460,1301,227,1198,1590,467,673,440,442,449,449,1605,449,1605,1590,672,1590,460,486,467,1590,1590,1588,1297,327,467,1590,1590,1590,1590,1590,1590,1605,1592,1591,1198,1590,467,673,1605,1295,1590,1590,673,486,440,1300,1590,1198,460,1605,1588,467,486,1590,460,1590,440,1590,467,486,1590,1301,486,1301,1591,486,331,1590,1590,467,1605,1590,1590,1590,1590,1297,57,1297,1588,1588,57,1300,1300,1590,1590,1590,1300,1301,1297,1590,1588,1590,1300,467,440,467,1626,1588,1300,1590,1590,1590,1590,226,1588,1605,486,1198,460,1590,1590,673,347,1590,1590,672,672,1590,1590,672,673,672,1590,1605,1590,1300,1590,669,1590,1590,1605,1590,1590,1588,1590,1590,1590,1590,1588,1606,1590,1590,1590,1590,1590,1300,1590,1590,1590,1590,1590,1588,1590,1590,1590,1590,1588,1590,1590,1590,1588,1590,1301,1590,346,1590,1295,669,1588,1589,1590,1589,1588,1590,1590,1588,1297,1588,1590,1590,1590,366,1590,1588,1606,1592,1590,1605,1589,673,1590,1592,1588,1590,1590,669,1296,1588,1590,1591,1590,1590,1590,1297,1611,1590,1590,669,1590,1588,1301,1301,669,673,1198,1590,672,669,1588,672,1590,1590,1590,1301,672,1301,1297,669,1605,1590,1590,1590,1608,1297,1590,1590,213,1590,1590,1590,1590,1592,669,1590,673,1590,1590,1590,669,1588,1590,1605,1301,1590,1590,1300,1300,1591,1590,1590,1590,1198,669,1605,1592,1592,1590,1591,1605,1591,1591,1590,1605,1605,1600,72,72,72,72,72,72,72,68,72,72,72,72,72,72,72,72,72,68,72,68,68,68,68,68,68,68,72,68,68,68,68,68,68,68,68,72,68,68,68,68,68,68,68,72,72,68,68,68,68,68,68,68,68,68,72,68,68,68,68,68,68,68,68,68,72,72,72,72,72,72,72,72,72,68,1590,1590,1301,1590,1590,1605,1301,1590,1590,1301,1300,1592,486,1590,1590,1606,1606,1324,1606,618,1605,1590,1590,1606,618,1606,1606,1605,618,467,1590,1606,673,1606,618,673,72,72,72,72,57,57,57,57,72,68,68,72,72,72,72,72,72,72,57,1606,1590,1606,1590,1300,1622,1300,1301,57,1197,1301,1606,1590,1301,1301,1301,1297,68,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,69,69,69,69,69,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,69,68,68,68,68,68,68,68,57,68,68,68,68,68,68,68,68,68,57,68,68,68,68,68,68,68,72,68,57,57,68,68,68,68,68,68,68,68,62,62,62,62,62,62,62,62,62,69,69,69,69,69,69,69,62,62,62,68,68,68,68,68,68,68,68,68,62,62,62,62,56,68,68,68,68,618,1588,1606,1304,1588,1590,1592,1590,1588,1590,1588,1590,1605,1590,1328,626,467,444,1605,1297,1635,1606,1605,1610,1592,618,1605,1605,1606,219,1622,1590,1592,440,219,219,1600,1600,1301,1304,219,1590,219,626,1626,1590,1600,1301,219,1590,1590,1601,219,219,1324,1590,1297,1592,1301,219,219,1590,626,626,626,219,1590,673,1601,1590,672,1606,219,1601,1601,1600,329,341,219,1296,672,219,326,1296,329,1306,219,1300,1606,1592,1589,219,1600,219,332,219,1590,1300,329,1590,486,328,1590,219,1600,1601,219,672,1590,1588,1590,1590,219,329,332,1590,329,336,1300,341,341,336,1590,329,1590,1600,332,219,1329,488,219,332,327,1600,329,1588,327,1590,1590,219,219,341,219,1592,1301,1590,1590,467,1592,1591,1622,1626,1590,34,213,1592,1300,1606,1590,1590,1301,1606,1606,1300,1590,467,1588,437,441,1622,1605,1295,1295,1590,1590,1300,1590,1300,1588,669,1606,673,1606,1605,1606,1590,1606,1606,1590,1606,1590,1590,1606,1590,1605,1324,1328,486,1297,1305,1297,1630,1590,1297,486,1590,1606,486,1605,486,1606,1300,1606,1606,1606,1590,1606,672,626,1601,1296,1590,1591,1590,1590,1589,1590,1590,1605,1590,1605,1590,1302,1605,437,1590,487,1590,1606,1590,1325,1309,54,672,219,1305,672,1590,1296,669,669,626,1590,618,1606,472,1590,440,1590,1302,1590,1605,1590,1590,1606,1606,1590,1590,1592,1588,1329,1591,1591,1589,1590,1590,1591,1590,1592,1590,1590,1589,1590,1591,1302,1591,1591,1296,1605,1590,1605,1606,1590,1626,1606,626,1622,1605,1606,1606,1592,672,1301,1606,1606,1606,1325,1325,1605,1590,1606,1606,1606,1300,1605,1606,1296,1606,1606,1325,1606,1606,1606,673,1606,1606,1590,1606,1590,1606,1605,1590,1590,1606,1590,1612,1590,1606,1590,1606,1301,1605,1301,1605,1606,1606,1606,1590,1606,1301,672,618,1606,1605,1606,1606,1606,618,1606,1590,669,626,1606,1606,618,1590,1590,1590,1302,1588,1300,1296,1590,1300,1590,1588,1605,1302,1590,1590,1590,1302,1590,1606,669,669,1634,1605,1301,672,1605,1590,1590,1590,1590,1606,1606,1606,672,672,672,1590,1295,1302,1302,1588,1302,1590,1590,1606,1588,1606,1635,1606,1300,1301,1590,1590,1296,1605,1296,1329,669,672,618,1590,1590,1590,291,1590,1296,1296,669,1301,1301,1300,1606,1590,1590,1605,1591,1592,1592,1590,1592,1622,1591,1591,1606,1590,1590,1592,1591,1605,1615,1635,1297,1590,1605,1634,669,1606,1606,1590,1605,1606,618,1592,1590,1592,1301,1630,1592,1606,1606,1605,1297,1635,1606,1297,1615,1592,1606,1297,1605,1606,1297,1328,1605,1606,1605,1606,1622,1635,1297,1297,1591,66,1590,1592,1301,1591,1591,1605,1590,1606,1297,1606,1297,1297,1297,1297,1297,1606,1606,1606,1630,626,1606,1605,1590,1590,1590,1605,1605,1590,1605,1606,483,1590,1590,1301,1606,1606,1301,1590,1631,1590,1590,1590,1605,626,1590,1606,1329,1606,1605,669,1590,1606,618,1591,1590,1605,1590,1634,1606,1591,1605,1605,1605,1611,1606,669,1605,669,1606,1591,1605,1605,1622,1605,1605,1606,1591,1606,1606,1590,1606,1606,1304,1606,672,1606,1606,1592,1591,1606,669,227,1590,1590,1590,1301,1606,227,249,1590,1606,673,1590,1606,1590,1590,249,672,1590,1631,1590,1590,669,1300,626,227,672,672,227,1606,1605,1605,1590,1606,1611,1590,672,1297,227,1606,1297,618,618,673,1606,1590,1605,1590,1297,1590,1590,1590,1590,1606,618,672,673,673,1301,1606,1297,1590,1297,1301,227,1590,1301,1300,1300,1606,1605,672,1626,1300,1297,1297,1631,1606,1590,1606,1590,1297,1590,1590,1590,1590,1297,1297,673,1590,1590,1590,1297,1297,1606,1297,1590,1590,1590,1590,1590,1590,1297,1590,227,1590,1590,1297,1590,1590,1605,1590,1590,626,673,1605,1590,1590,1590,1590,672,1590,1590,672,1590,1605,1606,1605,1297,1590,1590,1606,1606,626,1590,1590,1590,673,1590,1590,626,1590,626,1590,1590,1590,673,1606,669,672,672,1631,1626,1590,1590,673,1590,1590,672,1606,1605,1605,1605,1301,1605,1606,1590,1590,1590,1590,1606,673,1606,1606,1590,1590,1590,1606,1590,618,1590,673,1606,1606,1590,1589,1630,1300,1631,1606,1301,1301,669,672,1300,1606,1612,1606,1606,1605,1605,1605,1590,1302,1296,1590,669,1300,1300,669,669,669,1606,1590,1605,1606,672,669,1590,669,1606,618,1606,1606,1590,1606,1606,1297,1605,1297,1606,1590,1590,1590,673,1590,1606,618,1606,1301,1606,1297,1590,1297,1590,1590,1590,1305,1590,1590,1297,1590,1300,1297,1297,1590,1605,1634,1605,1606,1590,1590,1590,1590,1606,673,673,1590,618,1590,1590,1606,1590,1590,1606,1590,1590,1590,1590,1590,1606,1590,1590,1590,1590,1590,673,673,626,673,673,1606,1630,1606,1590,1590,618,1590,1590,1590,1590,1590,1590,458,1301,1590,1605,1590,1590,1590,1590,1300,1590,1590,1606,672,458,440,440,669,1590,18,1590,1590,1610,1590,1590,19,672,1590,1606,669,1590,1590,227,1590,672,22,1605,1588,1605,1610,1590,1590,1198,1198,1605,1611,1590,1606,672,672,1198,1590,1590,1590,1590,210,1611,1590,1590,1605,1590,1605,1605,1297,1198,1605,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1606,1590,1590,1590,1590,1300,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1605,486,673,1590,213,1590,1590,672,1590,1590,1590,1590,1590,672,1590,1590,1590,1590,1590,1606,1590,1590,1590,1635,1605,1590,1610,1590,1590,1590,1590,1590,1590,1590,1590,672,327,1605,1601,1601,22,327,1605,346,1605,1198,57,1198,57,1605,1588,57,1590,1301,1589,1301,1301,1297,1590,57,1590,1606,327,1605,219,1301,1301,1301,1615,347,1608,1591,57,1605,1605,1198,1198,1605,1296,1588,1605,1605,327,1588,672,486,486,1198,1198,1605,1590,346,1605,672,1295,672,1588,672,22,1198,1297,1590,1605,1605,1605,1296,1297,1590,1592,1590,326,1198,1589,1605,1590,1301,1590,1590,1606,1606,1296,1605,1605,1605,1590,1605,1605,326,1611,1301,1610,1590,1590,1605,672,1605,227,1589,1588,1198,1590,1301,22,1198,1605,1610,328,1590,1198,1590,1295,1590,1590,1611,1297,1301,329,1590,366,1592,1302,486,1299,672,1301,1198,1301,21,467,1301,1301,1301,1610,1301,1590,1588,1590,1590,1298,1198,672,1301,1198,1590,1590,1297,1590,1590,1590,1590,669,641,641,1606,1590,669,1590,1297,1590,669,669,1590,291,641,641,638,1590,641,1590,641,641,641,1591,1590,641,1592,1590,1590,1590,669,1590,1590,1590,1590,1592,1590,1592,1590,618,1590,1590,1590,1590,1297,669,1592,1297,1591,1590,1590,1591,1590,1590,669,1297,1590,669,1590,1590,1590,1591,1626,1606,1606,618,1591,1297,1606,1590,618,1606,1592,1591,1592,1591,641,669,1297,1590,1590,1605,1606,1610,1606,1606,1300,1606,1605,1605,1606,1605,1606,618,1606,53,1605,1590,1300,641,1592,1591,1591,1590,1590,1300,1590,1590,641,291,1296,1590,1591,1590,1590,1591,1590,1590,1592,1591,669,1591,1590,1590,1592,1297,1590,1590,1590,1305,1304,1297,618,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,672,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1297,1590,1590,1590,1590,1297,1590,1590,1590,1590,1590,1590,1590,1590,1297,1297,1297,1590,1590,618,618,1590,1590,1590,1590,1590,1590,1590,1590,1590,1606,1590,1590,486,1590,1605,1590,1590,1590,213,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,672,1590,1590,1590,1590,1590,1590,63,673,673,1605,1605,1589,1589,1605,1605,1605,1605,1605,1605,1590,1590,1591,1592,1590,1590,1590,1590,1590,1590,1590,1590,1590,1590,673,673,1605,1605,1605,1605,1605,1605,1605,1605,1589,1589,1589,1590,1591,1592,1591,1590,1590,1605,1605,1589,1589,1588,1588,1605,1605,24,472,472,1300,1297,1298,1298],"BlockState":"=0,2386","AliveCount":2386,"BlockStringData":["CONTROLLER_CPS = 1  -- cycles per second, this is the number of step taken per second. lower is more stable but higher is faster\r\nSMOOTHER_SPEED = 0.05  -- rate of variation of the value toward target value per call (1/40s). shouldn't be changed\r\n-- name of the strafer ad forwarder spinner to relay commands\r\nINPUT_STRAFER_NAME = \"strafer\"\r\nINPUT_FORWARDER_NAME = \"forwarder\"\r\nINPUT_SPINNER_POWER = 0.5  -- the power expected on the input spinners (0 > power > 1, 0 and 1 won't work)\r\n-- the ratio fo time a leg spend on ground vs returning to the start point.\r\n-- higher is faster but risk maxing out the spinner speed and hitting ground too strongly (and looking weird)\r\nGAIT_GROUND_RATIO = 0.7\r\nGAIT_MIN_HEIGHT = 3  -- min height for the return move of the gait\r\n\r\n\r\ncontroller = nil\r\n\r\nfunction Update(I)\r\n    if controller == nil then\r\n        controller = Controller.newAmplitudeController(I, buildArms(I))\r\n    end\r\n    controller:move(I)\r\nend\r\n\r\nfunction buildArms(I)\r\n    --marauder 8 legs\r\n    local segment0Right = { len = Vector3(0, -4, 4), spinOffset = 0, spinDirection = -1 }\r\n    local segment0Left = { len = Vector3(0, -4, 4), spinOffset = 180, spinDirection = -1 }\r\n    local segment1 = { len = Vector3(0, 0, 6), spinOffset = 0, spinDirection = 1 }\r\n    local segment2 = { len = Vector3(0, 4, 11.5), spinOffset = -19.2, spinDirection = -1 }\r\n    return PrefabLegBuilder.buildLegs(I,\r\n            {\r\n                { gaitCenter = Vector3(8.5, -7.5, -5), segments = { segment0Right, segment1, segment2 } }, -- bottom right\r\n                { gaitCenter = Vector3(10, -7.5, 0), segments = { segment0Right, segment1, segment2 } }, -- middle bottom right\r\n                { gaitCenter = Vector3(10, -7.5, 0), segments = { segment0Right, segment1, segment2 } }, -- middle top right\r\n                { gaitCenter = Vector3(8.5, -7.5, 5), segments = { segment0Right, segment1, segment2 } }, -- top right\r\n                { gaitCenter = Vector3(-8.5, -7.5, 5), segments = { segment0Left, segment1, segment2 } }, -- top left\r\n                { gaitCenter = Vector3(-10, -7.5, 0), segments = { segment0Left, segment1, segment2 } }, -- middle top left\r\n                { gaitCenter = Vector3(-10, -7.5, 0), segments = { segment0Left, segment1, segment2 } }, -- middle bottom left\r\n                { gaitCenter = Vector3(-8.5, -7.5, -5), segments = { segment0Left, segment1, segment2 } }  -- bottom left\r\n            })\r\nend\r\n\r\n-- WIP : adjust each leg height individually by checking the terrain height, acting as a manual suspension\r\nAdjuster = {\r\n    new = function(I, legs)\r\n        return {\r\n            comAdjust = Vector3.zero,\r\n            maxOffset = legs[next(legs)].segments[2].len.z * 0.2,\r\n            legOffsets = {},\r\n            getForLeg = function(self, leg)\r\n                local legOffset = self.legOffsets[leg]\r\n                if (legOffset == nil) then\r\n                    legOffset = Vector3.zero\r\n                end\r\n                return self.comAdjust + legOffset\r\n            end,\r\n            calculateLegOffsets = function(self, I, legTargets, t)\r\n                local vehiculeWorldPosition = I:GetConstructCenterOfMass() + I:GetVelocityVector() * t\r\n                --local vehiculeWorldRotation = Quaternion.LookRotation(I:GetConstructForwardVector(), I:GetConstructUpVector())\r\n                local vehiculeWorldRotation = Quaternion.AngleAxis(I:GetConstructYaw(), Vector3.up)\r\n                local n = 0\r\n                local offset = 0\r\n                self.legOffsets = {}\r\n                for leg, target in pairs(legTargets) do\r\n                    local targetLocalPosition = leg.position + target\r\n                    local targetWorldPos = vehiculeWorldPosition + vehiculeWorldRotation * targetLocalPosition\r\n                    local heightDiff = targetWorldPos.y - I:GetTerrainAltitudeForPosition(targetWorldPos.x, targetWorldPos.y, targetWorldPos.z)\r\n                    self.legOffsets[leg] = heightDiff\r\n                    offset = offset + heightDiff\r\n                    n = n + 1\r\n                end\r\n                local meanOffset = offset / n\r\n                local log = string.format(\"mean=%f, \", meanOffset)\r\n                for leg, heightDiff in pairs(self.legOffsets) do\r\n                    log = log .. string.format(\" leg%d=%f \", leg.segments[1].spinId, heightDiff)\r\n                end\r\n                I:Log(log)\r\n                for leg, heightDiff in pairs(self.legOffsets) do\r\n                    local legOffset = heightDiff - meanOffset\r\n                    if (math.abs(legOffset) > self.maxOffset) then\r\n                        legOffset = self.maxOffset * legOffset / math.abs(legOffset)\r\n                    end\r\n                    self.legOffsets[leg] = Vector3(0, -legOffset, 0)\r\n                end\r\n            end\r\n        }\r\n    end\r\n}\r\n\r\n-- gathers input commands, calculate the target position for each leg and moves them\r\nController = {\r\n    -- build each individual movement gait for each leg\r\n    buildLegsGaits = function(I, legs)\r\n        local legGaits = {}\r\n        for id, leg in pairs(legs) do\r\n            legGaits[leg] = {\r\n                Walking = Gait.Walking.autoconfig(I, leg, -math.pi / 2),\r\n                Strafing = Gait.Walking.autoconfig(I, leg, 0),\r\n                Turning = Gait.Turning.autoconfig(I, leg),\r\n                Resting = Gait.Resting.autoconfig(I, leg)\r\n            }\r\n        end\r\n        return legGaits\r\n    end,\r\n    -- calculate the target for each leg using the supplied commands\r\n    calculateTarget = function(leg, gaits, curStep, forward, yaw, strafe)\r\n        local fTarget\r\n        local sTarget\r\n        local yTarget\r\n        local rTarget = gaits['Resting'].getPoint((curStep + leg.phase) % 1)\r\n        local fRatio = math.abs(forward)\r\n        local sRatio = math.abs(strafe)\r\n        local yRatio = math.abs(yaw)\r\n        local fDirection = Mathf.Sign(forward)\r\n        local sDirection = Mathf.Sign(strafe)\r\n        local yDirection = Mathf.Sign(yaw)\r\n        if (fRatio > 0.01) then\r\n            fTarget = (fRatio * gaits['Walking'].getPoint((fDirection * (curStep + leg.phase) % 1)) + (1 - fRatio) * rTarget)\r\n        end\r\n        if (sRatio > 0.01) then\r\n            sTarget = (sRatio * gaits['Strafing'].getPoint((sDirection * (curStep + leg.phase) % 1)) + (1 - sRatio) * rTarget)\r\n        end\r\n        if (yRatio > 0.01) then\r\n            yTarget = (yRatio * gaits['Turning'].getPoint((yDirection * (curStep + leg.phase) % 1)) + (1 - yRatio) * rTarget)\r\n        end\r\n\r\n        local wTarget = nil\r\n        if (fTarget ~= nil) then\r\n            if (sTarget ~= nil) then\r\n                wTarget = fTarget + sTarget - leg.gaitCenter\r\n            else\r\n                wTarget = fTarget\r\n            end\r\n        elseif sTarget ~= nil then\r\n            wTarget = sTarget\r\n        end\r\n\r\n        if (wTarget ~= nil) then\r\n            if (yTarget ~= nil) then\r\n                return (wTarget + yTarget) / 2\r\n            else\r\n                return wTarget\r\n            end\r\n        elseif yTarget ~= nil then\r\n            return yTarget\r\n        else\r\n            return rTarget\r\n        end\r\n    end,\r\n    -- create a controller that throttles using amplitude of movement\r\n    newAmplitudeController = function(I, legs)\r\n        local legGaits = Controller.buildLegsGaits(I, legs)\r\n        return {\r\n            legGaits = legGaits,\r\n            cps = CONTROLLER_CPS, -- cycles per second\r\n            --comAdjuster = Adjuster.new(I, legs),\r\n            lastTime = I:GetGameTime(),\r\n            curTurn = 0,\r\n            commandReader = InputReader.new(I),\r\n            -- read the inputs, calculates the target for each leg and makes them move\r\n            move = function(self, I)\r\n                local curTime = I:GetGameTime()\r\n                local curStep = (curTime * self.cps) % 1\r\n                local inputs = self.commandReader:getCommands(I)\r\n                I:Log(string.format('forward=%f, yaw=%f, strafe=%f', inputs.forward, inputs.yaw, inputs.strafe))\r\n                local legTargets = {}\r\n                for leg, gaits in pairs(self.legGaits) do\r\n                    local target = Controller.calculateTarget(leg, gaits, curStep, inputs.forward, inputs.yaw, inputs.strafe)\r\n                    legTargets[leg] = target\r\n                end\r\n                --self.comAdjuster:calculateLegOffsets(I, legTargets, curTime - self.lastTime)\r\n                for leg, target in pairs(legTargets) do\r\n                    --leg:moveLeg(I, target + self.comAdjuster:getForLeg(leg), curTime)\r\n                    leg:moveLeg(I, target, curTime)\r\n                end\r\n                self.lastTime = curTime\r\n            end,\r\n            -- check that all legs are still there\r\n            checkIntegrity = function(self, I)\r\n                local subConstructs = I:GetAllSubConstructs()\r\n                local scIndex = {}\r\n                for i = 1, #subConstructs do\r\n                    scIndex[subConstructs[i]] = true\r\n                end\r\n                for leg, gaits in pairs(self.legGaits) do\r\n                    if not scIndex[leg.segments[1].spinId] then\r\n                        return false\r\n                    end\r\n                end\r\n                return true\r\n            end\r\n        }\r\n    end\r\n}\r\n-- wrap a value to smooth the output so that changes are not to drastic\r\nSmoother = {\r\n    new = function()\r\n        return {\r\n            target = 0, -- wanted value\r\n            speed = SMOOTHER_SPEED, -- variation of value toward target per evaluation\r\n            value = 0, -- current value\r\n            update = function(self, val) -- change the target\r\n                self.target = val\r\n                return self\r\n            end,\r\n            evaluate = function(self) -- get the next value\r\n                if (self.target ~= self.value) then\r\n                    if (math.abs(self.target - self.value) < self.speed) then\r\n                        self.value = self.target\r\n                    else\r\n                        local sign = Mathf.Sign(self.target - self.value)\r\n                        self.value = self.value + sign * self.speed\r\n                    end\r\n                end\r\n                return self.value\r\n            end\r\n        }\r\n    end\r\n}\r\n\r\n-- handle configuring and reading inputs, especially strafe and forwards commands using a spinner as relay\r\nInputReader = {\r\n    new = function(I)\r\n        local strafeId = -1\r\n        local forwardId = -1\r\n        local subConstructs = I:GetAllSubConstructs()\r\n        for i = 1, #subConstructs do\r\n            if I:IsSpinBlock(subConstructs[i]) then\r\n                if I:IsSubConstructOnHull(subConstructs[i]) then\r\n                    local blockInfo = I:GetSubConstructInfo(subConstructs[i])\r\n                    if blockInfo.CustomName == INPUT_STRAFER_NAME then\r\n                        strafeId = blockInfo.SubConstructIdentifier\r\n                    elseif blockInfo.CustomName == INPUT_FORWARDER_NAME then\r\n                        forwardId = blockInfo.SubConstructIdentifier\r\n                    end\r\n                end\r\n            end\r\n        end\r\n\r\n        local commands = {\r\n            forward = {\r\n                forwardId = forwardId,\r\n                smoother = Smoother.new(),\r\n                read = function(self, I)\r\n                    local drive = I:GetDrive(0)\r\n                    if drive == 0 then\r\n                        return InputReader.readSpinner(I, self.forwardId)\r\n                    else\r\n                        return drive\r\n                    end\r\n                end\r\n            },\r\n            yaw = {\r\n                smoother = Smoother.new(),\r\n                read = function(self, I)\r\n                    return I:GetInput(0, 0) - I:GetInput(0, 1)\r\n                end\r\n            },\r\n            strafe = {\r\n                strafeId = strafeId,\r\n                smoother = Smoother.new(),\r\n                read = function(self, I)\r\n                    return InputReader.readSpinner(I, self.strafeId)\r\n                end\r\n            }\r\n        }\r\n\r\n        return {\r\n            commands = commands,\r\n            getCommands = function(self, I)\r\n                return {\r\n                    forward = self.commands.forward.smoother:update(self.commands.forward:read(I)):evaluate(),\r\n                    strafe = self.commands.strafe.smoother:update(self.commands.strafe:read(I)):evaluate(),\r\n                    yaw = self.commands.yaw.smoother:update(self.commands.yaw:read(I)):evaluate(),\r\n                }\r\n            end\r\n        }\r\n    end,\r\n    readSpinner = function(I, spinnerId)\r\n        if spinnerId ~= -1 then\r\n            local angle = Vector3.SignedAngle(Vector3.forward, I:GetSubConstructInfo(spinnerId).LocalForwards, Vector3.up)\r\n            return angle / (180 * INPUT_SPINNER_POWER)\r\n        end\r\n        return 0\r\n    end\r\n}\r\n\r\n-- contains all possiblie gaits for a leg, with handy creation method\r\nGait = {\r\n    -- walking gait, composed of a flat line and an elliptic return to origin\r\n    Walking = {\r\n        new = function(position, yAngle, height, width)\r\n            return {\r\n                getPoint = function(t)\r\n                    local groundRatio = GAIT_GROUND_RATIO -- ratio of time passed on ground over time returning to origin\r\n                    t = (t + groundRatio / 2) % 1\r\n                    local target\r\n                    if (t < groundRatio) then\r\n                        target = Vector3(\r\n                                position.x + width / 2 - (t / groundRatio) * width,\r\n                                position.y,\r\n                                position.z)\r\n                    else\r\n                        local te = 0.5 - 0.5 * (t - groundRatio) / (1 - groundRatio)\r\n                        target = Vector3(\r\n                                position.x + math.cos(te * math.pi * 2) * (width / 2),\r\n                                position.y + math.sin(te * math.pi * 2) * height,\r\n                                position.z)\r\n                    end\r\n                    return rotateAround(target, yAngle, position)\r\n                end\r\n            }\r\n        end,\r\n        autoconfig = function(I, leg, angle)\r\n            local position\r\n            if leg.gaitCenter == nil then\r\n                local legDirection = I:GetSubConstructInfo(leg.segments[1].spinId).LocalPositionRelativeToCom\r\n                position = legDirection.normalized * ((leg.segments[1].len.z + leg.segments[2].len.z) * 1.2)\r\n                position.y = -leg.segments[3].len.z + leg.segments[1].len.y - 2\r\n            else\r\n                position = leg.gaitCenter\r\n            end\r\n\r\n            I:Log(string.format(\"creating walking gait for leg %s, centered at %s with width %f\", tostring(leg.position), tostring(position), leg.segments[3].len.z * 1.2))\r\n\r\n            return Gait.Walking.new(position,\r\n                    angle, math.max(leg.segments[2].len.z * 0.5, GAIT_MIN_HEIGHT), math.sqrt(position.x * position.x + position.z * position.z))\r\n        end\r\n    },\r\n    -- turning gait, composed of a circle arc on the ground and a elliptic circle arc to return to origin\r\n    Turning = {\r\n        new = function(center, radius, radStart, radLength, height)\r\n            return {\r\n                getPoint = function(t)\r\n                    local groundRatio = GAIT_GROUND_RATIO\r\n                    t = (t + groundRatio / 2) % 1\r\n                    if (t < groundRatio) then\r\n                        -- foot on ground\r\n                        local tg = t / groundRatio\r\n                        return Vector3(\r\n                                center.x + radius * math.cos(radStart + (radLength * (tg))),\r\n                                center.y,\r\n                                center.z + radius * math.sin(radStart + (radLength * (tg))))\r\n                    else\r\n                        local tv = 0.5 * (t - groundRatio) / (1 - groundRatio)\r\n                        local th = (1 + math.cos(tv * math.pi * 2)) / 2;\r\n                        return Vector3(\r\n                                center.x + radius * math.cos(radStart + (radLength * th)),\r\n                                center.y + math.sin(tv * math.pi * 2) * height,\r\n                                center.z + radius * math.sin(radStart + (radLength * th)));\r\n                    end\r\n                end\r\n            }\r\n        end,\r\n        autoconfig = function(I, leg)\r\n            local spinPosition = I:GetSubConstructInfo(leg.segments[1].spinId).LocalPositionRelativeToCom\r\n\r\n            local rotCenter\r\n            local rotRadius\r\n            local angleOffset\r\n            if leg.gaitCenter == nil then\r\n                rotCenter = Vector3(-spinPosition.x, -leg.segments[3].len.z + leg.segments[1].len.y - 2, -spinPosition.z)\r\n                rotRadius = math.sqrt(spinPosition.x * spinPosition.x + spinPosition.z * spinPosition.z) + leg.segments[1].len.z + leg.segments[2].len.z\r\n                angleOffset = 2 * math.pi * Vector3.SignedAngle(Vector3.ProjectOnPlane(spinPosition, Vector3.up), Vector3.right, Vector3.up) / 360\r\n            else\r\n                rotCenter = Vector3(-spinPosition.x, leg.gaitCenter.y, -spinPosition.z)\r\n                rotRadius = Vector3.Distance(rotCenter, leg.gaitCenter)\r\n                angleOffset = 2 * math.pi * Vector3.SignedAngle(Vector3.ProjectOnPlane(spinPosition + leg.gaitCenter, Vector3.up), Vector3.right, Vector3.up) / 360\r\n            end\r\n\r\n            I:Log(string.format(\"creating turning gait for leg %s, rotating around %s with radius %f and offset %f\", tostring(leg.position), tostring(rotCenter), rotRadius, angleOffset))\r\n\r\n            return Gait.Turning.new(rotCenter,\r\n                    rotRadius,\r\n                    angleOffset + math.pi / 12,\r\n                    -math.pi / 6,\r\n                    math.max(leg.segments[2].len.z * 0.5, GAIT_MIN_HEIGHT)\r\n            )\r\n        end\r\n    },\r\n    -- resting gait, legs immobile at center\r\n    Resting = {\r\n        new = function(position)\r\n            return {\r\n                getPoint = function(t)\r\n                    return position\r\n                end\r\n            }\r\n        end,\r\n        autoconfig = function(I, leg)\r\n            local position\r\n            if leg.gaitCenter == nil then\r\n                local legDirection = I:GetSubConstructInfo(leg.segments[1].spinId).LocalPositionRelativeToCom\r\n                position = legDirection.normalized * ((leg.segments[1].len.z + leg.segments[2].len.z) * 1.2)\r\n                position.y = -leg.segments[3].len.z + leg.segments[1].len.y - 2\r\n            else\r\n                position = leg.gaitCenter\r\n            end\r\n            I:Log(string.format(\"creating resting gait for leg %s, at %s\", tostring(leg.position), tostring(position)))\r\n            return Gait.Resting.new(position)\r\n        end\r\n    }\r\n}\r\n\r\n-- represent a segment of a leg, used to control the spinner of this segment\r\nSegment = {\r\n    new = function(spinId, len, spinOffset, spinDirection)\r\n        return {\r\n            lastUpdate = nil,\r\n            lastAngle = nil,\r\n            spinId = spinId,\r\n            len = len,\r\n            spinOffset = spinOffset,\r\n            spinDirection = spinDirection,\r\n            setAngle = function(self, I, angle, t)\r\n                local rotSpeed = 0\r\n                if (self.lastUpdate ~= nil and self.lastUpdate ~= t) then\r\n                    local ellapsedTime = (t - self.lastUpdate + 1) % 1\r\n                    rotSpeed = math.min(math.abs((angle - self.lastAngle) / (ellapsedTime)), 30)\r\n                    --I:Log(string.format('spinner %d going from %f to %f in %f seconds, setting speed at %f rad/s', self.spinId, self.lastAngle, angle, ellapsedTime, rotSpeed))\r\n                end\r\n                self.lastUpdate = t\r\n                self.lastAngle = angle\r\n                I:SetSpinBlockContinuousSpeed(self.spinId, 30)\r\n                local angleDeg = 360 * angle / (2 * math.pi)\r\n                I:SetSpinBlockRotationAngle(self.spinId, self.spinDirection * (angleDeg + self.spinOffset))\r\n            end\r\n        }\r\n    end\r\n}\r\n\r\n-- helper method to build legs using a leg template and finding suitable spinners on construct\r\nPrefabLegBuilder = {\r\n    buildLegs = function(I, legTemplates)\r\n        local subConstructs = I:GetAllSubConstructs()\r\n\r\n        local scByOrientation = {}\r\n        for i = 1, #subConstructs do\r\n            local id = subConstructs[i]\r\n            if I:IsSpinBlock(id) then\r\n                if I:IsSubConstructOnHull(id) then\r\n                    local scPos = I:GetSubConstructInfo(id).LocalPositionRelativeToCom\r\n                    table.insert(scByOrientation, { id = id, ori = Vector3.SignedAngle(Vector3.forward, Vector3.ProjectOnPlane(scPos, Vector3.up), Vector3.up) })\r\n                end\r\n            end\r\n        end\r\n        table.sort(scByOrientation, function(a, b)\r\n            return a.ori > b.ori\r\n        end)\r\n\r\n        local legs = {}\r\n        local i = 1\r\n        local defaultPhase = 0\r\n        for pos, scSorted in pairs(scByOrientation) do\r\n            local scId = scSorted.id\r\n            if legTemplates[i] ~= nil then\r\n                local leg = PrefabLegBuilder.buildLegFromTemplate(I, scId, legTemplates[i])\r\n                if leg ~= nil then\r\n                    if (legTemplates[i].phase == nil) then\r\n                        leg.phase = defaultPhase\r\n                    else\r\n                        leg.phase = legTemplates[i].phase\r\n                    end\r\n                    defaultPhase = (defaultPhase + 0.5) % 1\r\n                    legs[scId] = leg\r\n                    i = i + 1\r\n                    I:Log(string.format('built leg : position %s, gaitCenter %s, segment length %f', tostring(leg.position), tostring(leg.gaitCenter), leg.length))\r\n                end\r\n            end\r\n        end\r\n\r\n        return legs\r\n    end,\r\n    buildLegFromTemplate = function(I, baseScId, legTemplate)\r\n        local sc = I:GetSubConstructInfo(baseScId)\r\n        local length = 0\r\n        for i = 1, #legTemplate.segments do\r\n            length = length + legTemplate.segments[i].len.magnitude\r\n        end\r\n        local leg = {\r\n            position = sc.LocalPositionRelativeToCom,\r\n            segments = {},\r\n            moveLeg = IkLib.move3SegmentsLeg,\r\n            gaitCenter = legTemplate.gaitCenter,\r\n            length = length\r\n        }\r\n\r\n        I:Log(string.format('found base spinner number %d', sc.SubConstructIdentifier))\r\n        for i = 1, #legTemplate.segments do\r\n            local segTemplate = legTemplate.segments[i]\r\n            leg.segments[i] = Segment.new(\r\n                    sc.SubConstructIdentifier,\r\n                    segTemplate.len,\r\n                    segTemplate.spinOffset,\r\n                    segTemplate.spinDirection\r\n            )\r\n\r\n            if i < #legTemplate.segments then\r\n                local scChildren = I:GetAllSubConstructChildren(sc.SubConstructIdentifier)\r\n                if (#scChildren ~= 1) then\r\n                    I:Log(\"not a leg, keeping searching\")\r\n                    return nil\r\n                else\r\n                    sc = I:GetSubConstructInfo(scChildren[1])\r\n                end\r\n            end\r\n        end\r\n        return leg\r\n    end\r\n}\r\n\r\n-- helper lib for doing inverse kinematic using a leg config\r\nIkLib = {\r\n    move3SegmentsLeg = function(leg, I, target, t)\r\n        if target.magnitude > leg.length then\r\n            I:LogToHud(string.format(\"ERROR : target %s is too far for leg %s !\", tostring(target), leg.segments[1].spinId))\r\n        end\r\n\r\n        if target.magnitude < leg.segments[1].len.z then\r\n            I:LogToHud(string.format(\"ERROR : target %s is too close for leg %s !\", tostring(target), leg.segments[1].spinId))\r\n        end\r\n\r\n        local a0 = (target.z > 0 and -1 or 1) * math.acos(target.x / math.sqrt(target.x * target.x + target.z * target.z))\r\n\r\n        local rx = target.x / math.cos(a0) - leg.segments[1].len.z\r\n        local ry = target.y\r\n        local rMag = math.sqrt(rx * rx + ry * ry)\r\n\r\n        local a1 = (ry > 0 and 1 or -1) * math.acos(rx / rMag)\r\n                + math.acos(\r\n                (leg.segments[2].len.z * leg.segments[2].len.z + rMag * rMag - leg.segments[3].len.z * leg.segments[3].len.z)\r\n                        / (2 * leg.segments[2].len.z * rMag))\r\n\r\n        local a2 = -math.acos((rMag * rMag - leg.segments[2].len.z * leg.segments[2].len.z - leg.segments[3].len.z * leg.segments[3].len.z)\r\n                / (2 * leg.segments[2].len.z * leg.segments[3].len.z))\r\n\r\n        I:Log(string.format('t=%f : moving leg %d at %s, offset=%d, spinDir=%d to %s with angle a0=%f, a1=%f, a2=%f',\r\n                t, leg.segments[1].spinId, tostring(leg.position), leg.segments[1].spinOffset, leg.segments[1].spinDirection, tostring(target), a0, a1, a2))\r\n\r\n        leg.segments[1]:setAngle(I, a0, t)\r\n        leg.segments[2]:setAngle(I, a1, t)\r\n        leg.segments[3]:setAngle(I, a2, t)\r\n    end\r\n}\r\n\r\nfunction rotateAround(base, yAngle, rotationCenter)\r\n    local cosA = math.cos(yAngle)\r\n    local sinA = math.sin(yAngle)\r\n    return Vector3(\r\n            rotationCenter.x + cosA * (base.x - rotationCenter.x) + sinA * (base.z - rotationCenter.z),\r\n            base.y,\r\n            rotationCenter.z - sinA * (base.x - rotationCenter.x) + cosA * (base.z - rotationCenter.z)\r\n    )\r\nend"],"BlockStringDataIds":[1590],"GameVersion":"3.2.9.7","PersistentSubObjectIndex":132,"PersistentBlockIndex":1590,"AuthorDetails":{"Valid":false,"ForeignBlocks":0,"CreatorId":"00000000-0000-0000-0000-000000000000","ObjectId":"00000000-0000-0000-0000-000000000000","CreatorReadableName":"","HashV1":"b84624206a654c82d83dd439ab9c5677"},"BlockCount":2386}}